# Mosquitto MQTT Broker configuration file
# Template for WoST Mosquitto protocol binding
# Features: 
# - MQTT SSL and WebSockets SLL 
# - Authentication methods:
#   1. Client certificate based authentication (aimed at plugins)
#   2. Password based authentication for consumers (admin issued PW)

per_listener_settings true
allow_anonymous false
retain_available false
#message_size_limit 10000000
#max_inflight_messages 1000
#max_queued_bytes 100000000  
#max_queued_messages 1000

log_timestamp_format [%Y-%m-%dT%H:%M:%S] Mosquitto
log_type error
log_type warning
log_type notice
log_type information


# MQTT over TLS/SSL for use with certificate. 
# This is the preferred connection method and used by devices, plugins, administrator and consumers with a certificate.
listener {{.mqttCertPort}}
cafile {{.homeFolder}}/certs/caCert.pem
keyfile {{.homeFolder}}/certs/hubKey.pem
certfile {{.homeFolder}}/certs/hubCert.pem

# Certificate CN field identifies is used as the username
require_certificate true
use_identity_as_username true  
#	use_subject_as_username
tls_version tlsv1.2

# mosqauth plugin handles authorization
auth_plugin {{.homeFolder}}/../dist/bin/mosqauth.so


# WebSockets over TLS/SSL for use with login/password
# Intended for web browser and client applications that are consumers without certificate
# Client certificates are not used but a server CA is needed on the client or the 
#  client must ignore certificate verification.
# Use a password file for user names
listener {{.mqttUnpwPortWS}}
protocol websockets
cafile {{.homeFolder}}/certs/caCert.pem
keyfile {{.homeFolder}}/certs/hubKey.pem
certfile {{.homeFolder}}/certs/hubCert.pem

# Certificates are optional for consumers but required for devices and plugins
require_certificate false
tls_version tlsv1.2
# mosqauth plugin handles authorization
auth_plugin {{.homeFolder}}/../dist/bin/mosqauth.so
allow_anonymous false
password_file {{.homeFolder}}/config/mosquitto-passwd


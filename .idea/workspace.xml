<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a8355b86-cb16-4dbc-90ec-9852fdfe1e16" name="Changes" comment="Added an RPC callback method to List directory.&#10;Cleanup">
      <change afterPath="$PROJECT_DIR$/../hub.capnp/go/capnp/hubapi/Authn.capnp.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/IAuthn.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/capnpclient/AuthnCapnpClient.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/capnpclient/ManageAuthnCapnpClient.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/capnpclient/UserAuthnCapnpClient.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/capnpserver/AuthnCapnpServer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/capnpserver/ManageAuthnCapnpServer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/capnpserver/UserAuthnCapnpServer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/capserializer/Profiles.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/config/AuthnConfig.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/service/AuthnService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/service/ManageAuthn.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/service/UserAuthn.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/service/jwtauthn/JWTAuthn.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/authn/service/jwtauthn/JWTIssuer_test.go.oldhttpstuff" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.capnp/capnp/hubapi/Authn.capnp" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.capnp/capnp/hubapi/Authn.capnp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.capnp/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.capnp/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.capnp/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.capnp/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.capnp/go/hubapi/Authn.capnp.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.capnp/go/hubapi/Authn.capnp.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.go/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.go/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.go/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.go/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.go/pkg/exposedthing/ExposedThingFactory_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.go/pkg/exposedthing/ExposedThingFactory_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.go/pkg/mqttclient/MqttClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.go/pkg/mqttclient/MqttClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.go/pkg/tlsclient/TLSClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.go/pkg/tlsclient/TLSClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.go/pkg/watcher/WatchFile.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.go/pkg/watcher/WatchFile.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/hubcli/authz/AuthzCommands.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/hubcli/authz/AuthzCommands.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/use-cases.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/use-cases.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/caphelp/CapServe.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/caphelp/CapServe.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/cmd/authn/authn_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/cmd/authn.old/authn_test.go.old" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/cmd/authn/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/cmd/authn.old/main.go.old" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/cmd/authservice/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/authservice/AuthService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/service/AuthnService.go.org" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/authservice/AuthService_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/Authn_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/clientconfigstore/ClientConfigStore.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/service/clientconfigstore.old/ClientConfigStore.go.old" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/clientconfigstore/ClientConfigStore_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/service/clientconfigstore.old/ClientConfigStore.go.old_test.go.old" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/jwtissuer/JWTIssuer.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/service/jwtauthn/JWTIssuer.go.oldhttpstuff" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/jwtissuer/JWTIssuer_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/service/jwtauthn/JWTAuthn_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/unpwauth/IUnpwStore.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/service/unpwstore/IUnpwStore.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/unpwauth/UnpwAuthenticator.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/unpwauth/UnpwAuthenticator_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/unpwstore/PasswordFileStore.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/service/unpwstore/PasswordFileStore.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authn/pkg/unpwstore/PasswordFileStore_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authn/service/unpwstore/PasswordFileStore_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/Authz_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/Authz_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/IAuthz.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/IAuthz.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/capnpclient/AuthzCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/capnpclient/AuthzCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/capnpclient/ClientAuthzCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/capnpclient/ClientAuthzCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/capnpclient/ManageAuthzCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/capnpclient/ManageAuthzCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/capnpclient/VerifyAuthzCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/capnpclient/VerifyAuthzCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/capnpserver/AuthzCapnpServer.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/capnpserver/AuthzCapnpServer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/service/ClientAuthz.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/service/ClientAuthz.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/authz/service/aclstore/AclFileStore.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/authz/service/aclstore/AclFileStore.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/Certs_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/Certs_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/ICerts.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/ICerts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/capnpclient/CertsCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/capnpclient/CertsCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/capnpclient/DeviceCertsCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/capnpclient/DeviceCertsCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/capnpclient/ServiceCertsCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/capnpclient/ServiceCertsCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/capnpclient/UserCertsCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/capnpclient/UserCertsCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/capnpclient/VerifyCertsCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/capnpclient/VerifyCertsCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/service/selfsigned/CreateHubCA.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/service/selfsigned/CreateHubCA.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/service/selfsigned/DeviceCertsService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/service/selfsigned/DeviceCertsService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/service/selfsigned/SelfSignedCertsService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/service/selfsigned/SelfSignedCertsService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/service/selfsigned/ServiceCertsService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/service/selfsigned/ServiceCertsService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/service/selfsigned/UserCertsService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/service/selfsigned/UserCertsService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/service/selfsigned/VerifyCertsService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/service/selfsigned/VerifyCertsService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/certs/service/selfsigned/createClientCert.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/certs/service/selfsigned/createClientCert.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/directory/Directory_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/directory/Directory_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/directory/IDirectory.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/directory/IDirectory.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/directory/capnpclient/DirectoryCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/directory/capnpclient/DirectoryCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/directory/capnpclient/ReadDirectoryCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/directory/capnpclient/ReadDirectoryCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/directory/capnpclient/UpdateDirectoryCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/directory/capnpclient/UpdateDirectoryCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/directory/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/directory/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/directory/service/directorykvstore/DirectoryKVStore.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/directory/service/directorykvstore/DirectoryKVStore.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/history/History_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/history/History_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/history/IHistory.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/history/IHistory.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/history/capnpclient/HistoryCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/history/capnpclient/HistoryCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/history/capnpclient/ReadHistoryCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/history/capnpclient/ReadHistoryCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/history/capnpclient/UpdateHistoryCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/history/capnpclient/UpdateHistoryCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/history/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/history/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/history/config/HistoryConfig.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/history/config/HistoryConfig.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/history/service/mongohs/MongoHS.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/history/service/mongohs/MongoHS.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/launcher/Launcher_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/launcher/Launcher_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/launcher/service/LauncherService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/launcher/service/LauncherService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/IProvisioning.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/IProvisioning.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/capnpclient/ManageProvisioningCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/capnpclient/ManageProvisioningCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/capnpclient/ProvisioningCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/capnpclient/ProvisioningCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/capnpclient/RefreshProvisioningCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/capnpclient/RefreshProvisioningCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/capnpclient/RequestProvisioningCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/capnpclient/RequestProvisioningCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/capnpserver/ProvisioningCapnpServer.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/capnpserver/ProvisioningCapnpServer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/provisioning_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/Provisioning_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/service/ManageProvisioning.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/service/ManageProvisioning.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provisioning/service/ProvisioningService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provisioning/service/ProvisioningService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/state/IState.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/state/IState.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/state/State_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/state/State_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/state/capnpclient/ClientStateCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/state/capnpclient/ClientStateCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/state/capnpclient/StateCapnpClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/state/capnpclient/StateCapnpClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/state/service/statekvstore/ClientState.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/state/service/statekvstore/ClientState.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///snap/go/9952" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="autoscrollToSource" value="true" />
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2E6CU5HearAI724QkfHu1Kegb0S" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/henk/dev/hiveot/hub/pkg/authz/service&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;FeaturesTrainerSettingsPanel&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mongo&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/pkg/authz/service" />
      <recent name="$PROJECT_DIR$/pkg/authz/capnp4POGS" />
      <recent name="$PROJECT_DIR$/pkg/authz/capnpclient" />
      <recent name="$PROJECT_DIR$/pkg/authz/service/authorize" />
      <recent name="$PROJECT_DIR$/pkg" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/pkg/authn" />
      <recent name="$PROJECT_DIR$/pkg/authn/cmd" />
      <recent name="$PROJECT_DIR$/pkg/authn/cmd/authn" />
      <recent name="$PROJECT_DIR$/pkg/authz/cmd" />
      <recent name="$PROJECT_DIR$/pkg/authz/service" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestLoginRefreshLogout in github.com/hiveot/hub/pkg/authn">
    <configuration name="TestLoginPerf in github.com/hiveot/hub/pkg/authn" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hub" />
      <working_directory value="$PROJECT_DIR$/pkg/authn" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/hub/pkg/authn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLoginPerf\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestLoginRefreshLogout in github.com/hiveot/hub/pkg/authn" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hub" />
      <working_directory value="$PROJECT_DIR$/pkg/authn" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/hub/pkg/authn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLoginRefreshLogout\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProfile in github.com/hiveot/hub/pkg/authn" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hub" />
      <working_directory value="$PROJECT_DIR$/pkg/authn" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/hub/pkg/authn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProfile\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/hiveot/hub/pkg/authn" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hub" />
      <working_directory value="$PROJECT_DIR$/pkg/authn" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/hub/pkg/authn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/hiveot/hub/pkg/directory" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hub" />
      <working_directory value="$PROJECT_DIR$/pkg/directory" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/hub/pkg/directory" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestLoginRefreshLogout in github.com/hiveot/hub/pkg/authn" />
        <item itemvalue="Go Test.TestLoginPerf in github.com/hiveot/hub/pkg/authn" />
        <item itemvalue="Go Test.TestProfile in github.com/hiveot/hub/pkg/authn" />
        <item itemvalue="Go Test.go test github.com/hiveot/hub/pkg/authn" />
        <item itemvalue="Go Test.go test github.com/hiveot/hub/pkg/directory" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="false" />
                </map>
              </option>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="HEAD" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <ignored-roots>
      <path value="$PROJECT_DIR$/../hub.grpc" />
      <path value="$PROJECT_DIR$/../owserver-pb" />
    </ignored-roots>
    <MESSAGE value="dev iteration. Slowly migrating to use capnp" />
    <MESSAGE value="dev iteration. Update documentation with design ideas." />
    <MESSAGE value="dev iteration. conversion of services to using a capnproto wrapper." />
    <MESSAGE value="dev iteration. conversion of services to using a capnproto wrapper for both client and server." />
    <MESSAGE value="dev iteration&#10;* Experiment with 'capabilities' oriented design&#10;* Standardize on folder layout&#10;* Split certificate capabilities &#10;* Refactor directory and history services&#10;* Start on provisioning service" />
    <MESSAGE value="dev iteration&#10;* Cleanup certs and directory with a standard capnp wrapping pattern." />
    <MESSAGE value="Complete cleanup and capnp readiness of certs service" />
    <MESSAGE value="Complete cleanup and capnp readiness of directory service" />
    <MESSAGE value="Complete cleanup and capnp readiness of certs and directory service" />
    <MESSAGE value="Complete cleanup and capnp readiness of history store" />
    <MESSAGE value="Added simple state store for use by services and consumers. This is work in progress." />
    <MESSAGE value="Cleanup.&#10;Use context to close capnp server connections.&#10;Complete first basic state store." />
    <MESSAGE value="Add launcher&#10;Update cli to work with certs and launcher services via capnp. &#10;capnp clients now accept a connection istead of connecting themselves.&#10;Cleanup." />
    <MESSAGE value="Launcher switch to exec.Cmd &#10;- terminate services when launcher terminates&#10;- improve reporting&#10;Update CLI for launcher, certs and provisioning&#10;Cleanup" />
    <MESSAGE value="Launcher: improve error handling and logging  &#10;Launcher: adds logging of service stderr/stdout to file&#10;Launcher: Improve code coverage in tests&#10;KVStore: fix bug in store folder mode" />
    <MESSAGE value="Cleanup launching &amp; bug fixes" />
    <MESSAGE value="Cleanup launching &amp; bug fixes&#10;Investigating a capnp rpc data race in some testcases" />
    <MESSAGE value="Update documentation" />
    <MESSAGE value="Added authorization service&#10;Update documentation&#10;cleanup" />
    <MESSAGE value="Renamed capnp serializers to MarshalXyz and UnmarshalXyz" />
    <MESSAGE value="Added an RPC callback method to List directory.&#10;Cleanup" />
    <option name="LAST_COMMIT_MESSAGE" value="Added an RPC callback method to List directory.&#10;Cleanup" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/cmd/hubcli/certscli/CertCommands.go</url>
          <line>336</line>
          <option name="timeStamp" value="28" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/../hub.go/pkg/certsclient/Keys_test.go</url>
          <line>28</line>
          <option name="timeStamp" value="29" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/../hub.go/pkg/certsclient/Keys_test.go</url>
          <line>18</line>
          <option name="timeStamp" value="30" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/../hub.go/pkg/proc/Stop.go</url>
          <line>44</line>
          <option name="timeStamp" value="45" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/internal/kvstore/KVStore.go</url>
          <line>148</line>
          <option name="timeStamp" value="79" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/cmd/hubcli/main.go</url>
          <line>30</line>
          <option name="timeStamp" value="81" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/history/service/mongohs/MongoHS.go</url>
          <line>228</line>
          <option name="timeStamp" value="85" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_launcher.out" NAME="go test github.com/hiveot/hub/pkg/launcher Coverage Results" MODIFIED="1665593941235" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_provisioning.out" NAME="go test github.com/hiveot/hub/pkg/provisioning Coverage Results" MODIFIED="1665629806879" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestLoginRefreshLogout_in_github_com_hiveot_hub_pkg_authn.out" NAME="TestLoginRefreshLogout in github.com/hiveot/hub/pkg/authn Coverage Results" MODIFIED="1667100205656" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_directorystore.out" NAME="go test github.com/hiveot/hub/pkg/directorystore Coverage Results" MODIFIED="1663876228079" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestStartBadName_in_github_com_hiveot_hub_pkg_launcher.out" NAME="TestStartBadName in github.com/hiveot/hub/pkg/launcher Coverage Results" MODIFIED="1665027669792" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestProfile_in_github_com_hiveot_hub_pkg_authn.out" NAME="TestProfile in github.com/hiveot/hub/pkg/authn Coverage Results" MODIFIED="1667100156919" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestCreateDelete_in_github_com_hiveot_hub_pkg_history.out" NAME="TestCreateDelete in github.com/hiveot/hub/pkg/history Coverage Results" MODIFIED="1665545158437" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_directory.out" NAME="go test github.com/hiveot/hub/pkg/directory Coverage Results" MODIFIED="1665629782436" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_authz.out" NAME="go test github.com/hiveot/hub/pkg/authz Coverage Results" MODIFIED="1666501180580" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestAddGetEvent_in_github_com_hiveot_hub_pkg_history.out" NAME="TestAddGetEvent in github.com/hiveot/hub/pkg/history Coverage Results" MODIFIED="1665547199033" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_certs.out" NAME="go test github.com/hiveot/hub/pkg/certs Coverage Results" MODIFIED="1665629762626" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_authz_service_aclstore.out" NAME="go test github.com/hiveot/hub/pkg/authz/service/aclstore Coverage Results" MODIFIED="1666455587550" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestStartStopTwice_in_github_com_hiveot_hub_pkg_launcher.out" NAME="TestStartStopTwice in github.com/hiveot/hub/pkg/launcher Coverage Results" MODIFIED="1665028808661" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_state.out" NAME="go test github.com/hiveot/hub/pkg/state Coverage Results" MODIFIED="1665636363502" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestAddRemoveRoles_in_github_com_hiveot_hub_pkg_authz.out" NAME="TestAddRemoveRoles in github.com/hiveot/hub/pkg/authz Coverage Results" MODIFIED="1666460077057" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestNoAuthorization_in_github_com_hiveot_hub_pkg_authz.out" NAME="TestNoAuthorization in github.com/hiveot/hub/pkg/authz Coverage Results" MODIFIED="1666453577665" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestManualProvisioning_in_github_com_hiveot_hub_pkg_provisioning.out" NAME="TestManualProvisioning in github.com/hiveot/hub/pkg/provisioning Coverage Results" MODIFIED="1664738724782" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_historystore.out" NAME="go test github.com/hiveot/hub/pkg/historystore Coverage Results" MODIFIED="1663989968436" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestManagerAuthorization_in_github_com_hiveot_hub_pkg_authz.out" NAME="TestManagerAuthorization in github.com/hiveot/hub/pkg/authz Coverage Results" MODIFIED="1666460585155" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestGroup_in_github_com_hiveot_hub_pkg_authz_service_aclstore.out" NAME="TestGroup in github.com/hiveot/hub/pkg/authz/service/aclstore Coverage Results" MODIFIED="1666454399167" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestListGroups_in_github_com_hiveot_hub_pkg_authz.out" NAME="TestListGroups in github.com/hiveot/hub/pkg/authz Coverage Results" MODIFIED="1666459497680" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_history.out" NAME="go test github.com/hiveot/hub/pkg/history Coverage Results" MODIFIED="1665792334561" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestAutomaticProvisioningBadParameters_in_github_com_hiveot_hub_pkg_provisioning.out" NAME="TestAutomaticProvisioningBadParameters in github.com/hiveot/hub/pkg/provisioning Coverage Results" MODIFIED="1664736166374" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$gobench_github_com_hiveot_hub_pkg_launcher.out" NAME="gobench github.com/hiveot/hub/pkg/launcher Coverage Results" MODIFIED="1665027775771" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_authn.out" NAME="go test github.com/hiveot/hub/pkg/authn Coverage Results" MODIFIED="1667100093116" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestList_in_github_com_hiveot_hub_pkg_launcher.out" NAME="TestList in github.com/hiveot/hub/pkg/launcher Coverage Results" MODIFIED="1665536113183" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestCreateUserCert_in_github_com_hiveot_hub_pkg_certservice.out" NAME="TestCreateUserCert in github.com/hiveot/hub/pkg/certservice Coverage Results" MODIFIED="1663895834448" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestRemoveRole_in_github_com_hiveot_hub_pkg_authz_service_aclstore.out" NAME="TestRemoveRole in github.com/hiveot/hub/pkg/authz/service/aclstore Coverage Results" MODIFIED="1666454026469" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$go_test_github_com_hiveot_hub_pkg_certservice.out" NAME="go test github.com/hiveot/hub/pkg/certservice Coverage Results" MODIFIED="1663899705475" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestIsPublisher_in_github_com_hiveot_hub_pkg_authz.out" NAME="TestIsPublisher in github.com/hiveot/hub/pkg/authz Coverage Results" MODIFIED="1666451557855" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestStartStop_in_github_com_hiveot_hub_pkg_history.out" NAME="TestStartStop in github.com/hiveot/hub/pkg/history Coverage Results" MODIFIED="1665545475375" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hub$TestStartNoDBName_in_github_com_hiveot_hub_pkg_history.out" NAME="TestStartNoDBName in github.com/hiveot/hub/pkg/history Coverage Results" MODIFIED="1665546767596" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>
// Code generated by capnpc-go. DO NOT EDIT.

package hubapi

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

// Constants defined in Thing.capnp.
const (
	GoISO8601Format = "2006-01-02T15:04:05.000-0700"
)

type ThingValue capnp.Struct

// ThingValue_TypeID is the unique identifier for the type ThingValue.
const ThingValue_TypeID = 0x9bd6e69db8968092

func NewThingValue(s *capnp.Segment) (ThingValue, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return ThingValue(st), err
}

func NewRootThingValue(s *capnp.Segment) (ThingValue, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return ThingValue(st), err
}

func ReadRootThingValue(msg *capnp.Message) (ThingValue, error) {
	root, err := msg.Root()
	return ThingValue(root.Struct()), err
}

func (s ThingValue) String() string {
	str, _ := text.Marshal(0x9bd6e69db8968092, capnp.Struct(s))
	return str
}

func (s ThingValue) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ThingValue) DecodeFromPtr(p capnp.Ptr) ThingValue {
	return ThingValue(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ThingValue) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ThingValue) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ThingValue) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ThingValue) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ThingValue) PublisherID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ThingValue) HasPublisherID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ThingValue) PublisherIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ThingValue) SetPublisherID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ThingValue) ThingID() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s ThingValue) HasThingID() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s ThingValue) ThingIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s ThingValue) SetThingID(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s ThingValue) Name() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s ThingValue) HasName() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s ThingValue) NameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s ThingValue) SetName(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s ThingValue) Data() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return []byte(p.Data()), err
}

func (s ThingValue) HasData() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s ThingValue) SetData(v []byte) error {
	return capnp.Struct(s).SetData(3, v)
}

func (s ThingValue) Created() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s ThingValue) HasCreated() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s ThingValue) CreatedBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s ThingValue) SetCreated(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

// ThingValue_List is a list of ThingValue.
type ThingValue_List = capnp.StructList[ThingValue]

// NewThingValue creates a new list of ThingValue.
func NewThingValue_List(s *capnp.Segment, sz int32) (ThingValue_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5}, sz)
	return capnp.StructList[ThingValue](l), err
}

// ThingValue_Future is a wrapper for a ThingValue promised by a client call.
type ThingValue_Future struct{ *capnp.Future }

func (f ThingValue_Future) Struct() (ThingValue, error) {
	p, err := f.Future.Ptr()
	return ThingValue(p.Struct()), err
}

type ThingValueMap capnp.Struct

// ThingValueMap_TypeID is the unique identifier for the type ThingValueMap.
const ThingValueMap_TypeID = 0xccab8f814d133426

func NewThingValueMap(s *capnp.Segment) (ThingValueMap, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ThingValueMap(st), err
}

func NewRootThingValueMap(s *capnp.Segment) (ThingValueMap, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ThingValueMap(st), err
}

func ReadRootThingValueMap(msg *capnp.Message) (ThingValueMap, error) {
	root, err := msg.Root()
	return ThingValueMap(root.Struct()), err
}

func (s ThingValueMap) String() string {
	str, _ := text.Marshal(0xccab8f814d133426, capnp.Struct(s))
	return str
}

func (s ThingValueMap) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ThingValueMap) DecodeFromPtr(p capnp.Ptr) ThingValueMap {
	return ThingValueMap(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ThingValueMap) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ThingValueMap) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ThingValueMap) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ThingValueMap) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ThingValueMap) Entries() (ThingValueMap_Entry_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return ThingValueMap_Entry_List(p.List()), err
}

func (s ThingValueMap) HasEntries() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ThingValueMap) SetEntries(v ThingValueMap_Entry_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated ThingValueMap_Entry_List, preferring placement in s's segment.
func (s ThingValueMap) NewEntries(n int32) (ThingValueMap_Entry_List, error) {
	l, err := NewThingValueMap_Entry_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return ThingValueMap_Entry_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// ThingValueMap_List is a list of ThingValueMap.
type ThingValueMap_List = capnp.StructList[ThingValueMap]

// NewThingValueMap creates a new list of ThingValueMap.
func NewThingValueMap_List(s *capnp.Segment, sz int32) (ThingValueMap_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[ThingValueMap](l), err
}

// ThingValueMap_Future is a wrapper for a ThingValueMap promised by a client call.
type ThingValueMap_Future struct{ *capnp.Future }

func (f ThingValueMap_Future) Struct() (ThingValueMap, error) {
	p, err := f.Future.Ptr()
	return ThingValueMap(p.Struct()), err
}

type ThingValueMap_Entry capnp.Struct

// ThingValueMap_Entry_TypeID is the unique identifier for the type ThingValueMap_Entry.
const ThingValueMap_Entry_TypeID = 0xa75dd2927f33dca6

func NewThingValueMap_Entry(s *capnp.Segment) (ThingValueMap_Entry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ThingValueMap_Entry(st), err
}

func NewRootThingValueMap_Entry(s *capnp.Segment) (ThingValueMap_Entry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ThingValueMap_Entry(st), err
}

func ReadRootThingValueMap_Entry(msg *capnp.Message) (ThingValueMap_Entry, error) {
	root, err := msg.Root()
	return ThingValueMap_Entry(root.Struct()), err
}

func (s ThingValueMap_Entry) String() string {
	str, _ := text.Marshal(0xa75dd2927f33dca6, capnp.Struct(s))
	return str
}

func (s ThingValueMap_Entry) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ThingValueMap_Entry) DecodeFromPtr(p capnp.Ptr) ThingValueMap_Entry {
	return ThingValueMap_Entry(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ThingValueMap_Entry) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ThingValueMap_Entry) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ThingValueMap_Entry) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ThingValueMap_Entry) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ThingValueMap_Entry) Key() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ThingValueMap_Entry) HasKey() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ThingValueMap_Entry) KeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ThingValueMap_Entry) SetKey(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ThingValueMap_Entry) Value() (ThingValue, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return ThingValue(p.Struct()), err
}

func (s ThingValueMap_Entry) HasValue() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s ThingValueMap_Entry) SetValue(v ThingValue) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewValue sets the value field to a newly
// allocated ThingValue struct, preferring placement in s's segment.
func (s ThingValueMap_Entry) NewValue() (ThingValue, error) {
	ss, err := NewThingValue(capnp.Struct(s).Segment())
	if err != nil {
		return ThingValue{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

// ThingValueMap_Entry_List is a list of ThingValueMap_Entry.
type ThingValueMap_Entry_List = capnp.StructList[ThingValueMap_Entry]

// NewThingValueMap_Entry creates a new list of ThingValueMap_Entry.
func NewThingValueMap_Entry_List(s *capnp.Segment, sz int32) (ThingValueMap_Entry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[ThingValueMap_Entry](l), err
}

// ThingValueMap_Entry_Future is a wrapper for a ThingValueMap_Entry promised by a client call.
type ThingValueMap_Entry_Future struct{ *capnp.Future }

func (f ThingValueMap_Entry_Future) Struct() (ThingValueMap_Entry, error) {
	p, err := f.Future.Ptr()
	return ThingValueMap_Entry(p.Struct()), err
}
func (p ThingValueMap_Entry_Future) Value() ThingValue_Future {
	return ThingValue_Future{Future: p.Future.Field(1, nil)}
}

const schema_bb31fb6e03b18e9a = "x\xda\x84\x92\xcdkSA\x14\xc5\xcf\xb9\xf3b\x8a4" +
	"\xb6\xc3\x0b\x08n\xa2RE\x85\xd4I\xfa\xa1dS\x11" +
	"\x15\xba(vhu\xe7\xe2\xa5}4\xc1\xf65\xa6/" +
	"JAI\x05\x0b\x15\xeaW\x11\x11\xc5\xa5\xbap\xa3;" +
	"\xc1?@\x04\xdd\xb8\x10\x17\xba\x11u\xe1F\x10\\\x89" +
	"<\x99`\x93*\x88\xbb{\xef\xdc{\xce\xfd\xcd\x8cQ" +
	"<\xe4\x152\xcf\x05b\xb7\xa76%kK\xb7\x9e\xde" +
	"\xfb\xfc\xe6.\xb4\xcf\xe4\xce\xd5'*\xfaQx\x86T" +
	"*\x0d\xf8\xa3\xfc\xe6\x9f`\x1a\x18\xb0\xcc\x11L\x1e\xbc" +
	"\x1bh\xae\xbd>\xf5\x10z\x07\x93\xdd\x83\xfe\xd8\xc5k" +
	"\x8f^\"%\xae%\x94\x12\xfd\x86\x0b\xfd3r\x0e\xfc" +
	"\xba\xeb\xfe\xe3\xf4\x87\xe5\x17\xda\xf7:\xba\xe0\xc0+\xd9" +
	"F\xff\xbd\xeb\x9bx+\x8a\x13\x1fE\x08t\xd4\xfe\xdc" +
	"\xa3\xe5\xfeI6\xd3\xff.[\x01\xff\xa7\x8c \x9fT" +
	"\x1a\xe5\xa0V\xdd?)\x95j4\xd3?\x15\xd4\xa2Z" +
	"i\xd2\xc5\xb9\x93\xc1l#\x1c'mVy\x80G@" +
	"_(\x03\xf6\xbc\xa2]\x11j2KW\\>\x0c\xd8" +
	"%E\xbb*\xd4\"Y\x0a\xa0/\xef\x03\xec%E{" +
	"]\xa8\x95\xcaR\x01\xfa\x8a+\xae(\xda\x9bB\xedy" +
	"Yz\x80\xbe\xe1\xc6W\x15\xedmaRk\x94g\xab" +
	"\x0b\x95\x10\xe9\xfa\xe8\x11vC\xd8\x0d6c\xb7O'" +
	"\xef\x89\x82\xb9\xb0\x9dL\x07q\xc0\x0c\x84\x19\xb09U" +
	"\x0f\x838\x9c^?l\xd3\xa9\xbf\xe9ZpcAm" +
	"\xa4\xffh\x14\xd7\x17\x1dfW\x1bs\xefN\xc0\xf6)" +
	"Z\xb3\x013_\x04\xec\x1eE;(L\x9f\x0e\x17\xd7" +
	"=rg\x9d\x14{;\xcf\x0f\xb2\xf7\x1f\xde3\xf3\xa3" +
	"\x13\xc7\x0f\x0e\x9b\xc2\xb1\xf9\xfa\x9c\x0a\xe2q\xf2\xb7\x0e" +
	"4\xbf$Ec\x86\xf3\xa6\x90\x17S\x9c,\x0c\x95\xcc" +
	"`\xc9\x0c\xf5\x1bc\xf2=\xe6\x801\xff\xa7\x01\xac\xc7" +
	"\x8d\x7f\x8b\xc5\\\x8b\xcfzm\xb8\x8c\xbb\xef.E\xdb" +
	"'l\x86Q\\\xaf\x86\x0b\xdc\x02\x8e+\xb2\xb73\x0a" +
	"\xba\xe2\xaf\x00\x00\x00\xff\xff\xf4c\xb6I"

func init() {
	schemas.Register(schema_bb31fb6e03b18e9a,
		0x9bd6e69db8968092,
		0xa75dd2927f33dca6,
		0xc985e20007b0a525,
		0xccab8f814d133426)
}

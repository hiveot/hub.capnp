// Code generated by capnpc-go. DO NOT EDIT.

package hubapi

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	fmt "fmt"
)

// Constants defined in Gateway.capnp.
const (
	GatewayServiceName = "gateway"
)

type ClientInfo capnp.Struct

// ClientInfo_TypeID is the unique identifier for the type ClientInfo.
const ClientInfo_TypeID = 0xa84de8606bebcb5f

func NewClientInfo(s *capnp.Segment) (ClientInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ClientInfo(st), err
}

func NewRootClientInfo(s *capnp.Segment) (ClientInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ClientInfo(st), err
}

func ReadRootClientInfo(msg *capnp.Message) (ClientInfo, error) {
	root, err := msg.Root()
	return ClientInfo(root.Struct()), err
}

func (s ClientInfo) String() string {
	str, _ := text.Marshal(0xa84de8606bebcb5f, capnp.Struct(s))
	return str
}

func (s ClientInfo) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ClientInfo) DecodeFromPtr(p capnp.Ptr) ClientInfo {
	return ClientInfo(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ClientInfo) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ClientInfo) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ClientInfo) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ClientInfo) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ClientInfo) ClientID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ClientInfo) HasClientID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ClientInfo) ClientIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ClientInfo) SetClientID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ClientInfo) AuthType() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s ClientInfo) HasAuthType() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s ClientInfo) AuthTypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s ClientInfo) SetAuthType(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// ClientInfo_List is a list of ClientInfo.
type ClientInfo_List = capnp.StructList[ClientInfo]

// NewClientInfo creates a new list of ClientInfo.
func NewClientInfo_List(s *capnp.Segment, sz int32) (ClientInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[ClientInfo](l), err
}

// ClientInfo_Future is a wrapper for a ClientInfo promised by a client call.
type ClientInfo_Future struct{ *capnp.Future }

func (f ClientInfo_Future) Struct() (ClientInfo, error) {
	p, err := f.Future.Ptr()
	return ClientInfo(p.Struct()), err
}

type CapGatewaySession capnp.Client

// CapGatewaySession_TypeID is the unique identifier for the type CapGatewaySession.
const CapGatewaySession_TypeID = 0xc50a0c4801768ab0

func (c CapGatewaySession) ListCapabilities(ctx context.Context, params func(CapGatewaySession_listCapabilities_Params) error) (CapGatewaySession_listCapabilities_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc50a0c4801768ab0,
			MethodID:      0,
			InterfaceName: "hubapi/Gateway.capnp:CapGatewaySession",
			MethodName:    "listCapabilities",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapGatewaySession_listCapabilities_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapGatewaySession_listCapabilities_Results_Future{Future: ans.Future()}, release
}
func (c CapGatewaySession) Login(ctx context.Context, params func(CapGatewaySession_login_Params) error) (CapGatewaySession_login_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc50a0c4801768ab0,
			MethodID:      1,
			InterfaceName: "hubapi/Gateway.capnp:CapGatewaySession",
			MethodName:    "login",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapGatewaySession_login_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapGatewaySession_login_Results_Future{Future: ans.Future()}, release
}
func (c CapGatewaySession) Ping(ctx context.Context, params func(CapGatewaySession_ping_Params) error) (CapGatewaySession_ping_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc50a0c4801768ab0,
			MethodID:      2,
			InterfaceName: "hubapi/Gateway.capnp:CapGatewaySession",
			MethodName:    "ping",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapGatewaySession_ping_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapGatewaySession_ping_Results_Future{Future: ans.Future()}, release
}
func (c CapGatewaySession) Refresh(ctx context.Context, params func(CapGatewaySession_refresh_Params) error) (CapGatewaySession_refresh_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc50a0c4801768ab0,
			MethodID:      3,
			InterfaceName: "hubapi/Gateway.capnp:CapGatewaySession",
			MethodName:    "refresh",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapGatewaySession_refresh_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapGatewaySession_refresh_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c CapGatewaySession) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c CapGatewaySession) AddRef() CapGatewaySession {
	return CapGatewaySession(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c CapGatewaySession) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c CapGatewaySession) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c CapGatewaySession) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (CapGatewaySession) DecodeFromPtr(p capnp.Ptr) CapGatewaySession {
	return CapGatewaySession(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c CapGatewaySession) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c CapGatewaySession) IsSame(other CapGatewaySession) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c CapGatewaySession) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c CapGatewaySession) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A CapGatewaySession_Server is a CapGatewaySession with a local implementation.
type CapGatewaySession_Server interface {
	ListCapabilities(context.Context, CapGatewaySession_listCapabilities) error

	Login(context.Context, CapGatewaySession_login) error

	Ping(context.Context, CapGatewaySession_ping) error

	Refresh(context.Context, CapGatewaySession_refresh) error
}

// CapGatewaySession_NewServer creates a new Server from an implementation of CapGatewaySession_Server.
func CapGatewaySession_NewServer(s CapGatewaySession_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(CapGatewaySession_Methods(nil, s), s, c)
}

// CapGatewaySession_ServerToClient creates a new Client from an implementation of CapGatewaySession_Server.
// The caller is responsible for calling Release on the returned Client.
func CapGatewaySession_ServerToClient(s CapGatewaySession_Server) CapGatewaySession {
	return CapGatewaySession(capnp.NewClient(CapGatewaySession_NewServer(s)))
}

// CapGatewaySession_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func CapGatewaySession_Methods(methods []server.Method, s CapGatewaySession_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc50a0c4801768ab0,
			MethodID:      0,
			InterfaceName: "hubapi/Gateway.capnp:CapGatewaySession",
			MethodName:    "listCapabilities",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ListCapabilities(ctx, CapGatewaySession_listCapabilities{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc50a0c4801768ab0,
			MethodID:      1,
			InterfaceName: "hubapi/Gateway.capnp:CapGatewaySession",
			MethodName:    "login",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Login(ctx, CapGatewaySession_login{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc50a0c4801768ab0,
			MethodID:      2,
			InterfaceName: "hubapi/Gateway.capnp:CapGatewaySession",
			MethodName:    "ping",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Ping(ctx, CapGatewaySession_ping{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc50a0c4801768ab0,
			MethodID:      3,
			InterfaceName: "hubapi/Gateway.capnp:CapGatewaySession",
			MethodName:    "refresh",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Refresh(ctx, CapGatewaySession_refresh{call})
		},
	})

	return methods
}

// CapGatewaySession_listCapabilities holds the state for a server call to CapGatewaySession.listCapabilities.
// See server.Call for documentation.
type CapGatewaySession_listCapabilities struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapGatewaySession_listCapabilities) Args() CapGatewaySession_listCapabilities_Params {
	return CapGatewaySession_listCapabilities_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapGatewaySession_listCapabilities) AllocResults() (CapGatewaySession_listCapabilities_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapGatewaySession_listCapabilities_Results(r), err
}

// CapGatewaySession_login holds the state for a server call to CapGatewaySession.login.
// See server.Call for documentation.
type CapGatewaySession_login struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapGatewaySession_login) Args() CapGatewaySession_login_Params {
	return CapGatewaySession_login_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapGatewaySession_login) AllocResults() (CapGatewaySession_login_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_login_Results(r), err
}

// CapGatewaySession_ping holds the state for a server call to CapGatewaySession.ping.
// See server.Call for documentation.
type CapGatewaySession_ping struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapGatewaySession_ping) Args() CapGatewaySession_ping_Params {
	return CapGatewaySession_ping_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapGatewaySession_ping) AllocResults() (CapGatewaySession_ping_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapGatewaySession_ping_Results(r), err
}

// CapGatewaySession_refresh holds the state for a server call to CapGatewaySession.refresh.
// See server.Call for documentation.
type CapGatewaySession_refresh struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapGatewaySession_refresh) Args() CapGatewaySession_refresh_Params {
	return CapGatewaySession_refresh_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapGatewaySession_refresh) AllocResults() (CapGatewaySession_refresh_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_refresh_Results(r), err
}

// CapGatewaySession_List is a list of CapGatewaySession.
type CapGatewaySession_List = capnp.CapList[CapGatewaySession]

// NewCapGatewaySession creates a new list of CapGatewaySession.
func NewCapGatewaySession_List(s *capnp.Segment, sz int32) (CapGatewaySession_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[CapGatewaySession](l), err
}

type CapGatewaySession_listCapabilities_Params capnp.Struct

// CapGatewaySession_listCapabilities_Params_TypeID is the unique identifier for the type CapGatewaySession_listCapabilities_Params.
const CapGatewaySession_listCapabilities_Params_TypeID = 0xf1a76030917cce82

func NewCapGatewaySession_listCapabilities_Params(s *capnp.Segment) (CapGatewaySession_listCapabilities_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapGatewaySession_listCapabilities_Params(st), err
}

func NewRootCapGatewaySession_listCapabilities_Params(s *capnp.Segment) (CapGatewaySession_listCapabilities_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapGatewaySession_listCapabilities_Params(st), err
}

func ReadRootCapGatewaySession_listCapabilities_Params(msg *capnp.Message) (CapGatewaySession_listCapabilities_Params, error) {
	root, err := msg.Root()
	return CapGatewaySession_listCapabilities_Params(root.Struct()), err
}

func (s CapGatewaySession_listCapabilities_Params) String() string {
	str, _ := text.Marshal(0xf1a76030917cce82, capnp.Struct(s))
	return str
}

func (s CapGatewaySession_listCapabilities_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapGatewaySession_listCapabilities_Params) DecodeFromPtr(p capnp.Ptr) CapGatewaySession_listCapabilities_Params {
	return CapGatewaySession_listCapabilities_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapGatewaySession_listCapabilities_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapGatewaySession_listCapabilities_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapGatewaySession_listCapabilities_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapGatewaySession_listCapabilities_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// CapGatewaySession_listCapabilities_Params_List is a list of CapGatewaySession_listCapabilities_Params.
type CapGatewaySession_listCapabilities_Params_List = capnp.StructList[CapGatewaySession_listCapabilities_Params]

// NewCapGatewaySession_listCapabilities_Params creates a new list of CapGatewaySession_listCapabilities_Params.
func NewCapGatewaySession_listCapabilities_Params_List(s *capnp.Segment, sz int32) (CapGatewaySession_listCapabilities_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[CapGatewaySession_listCapabilities_Params](l), err
}

// CapGatewaySession_listCapabilities_Params_Future is a wrapper for a CapGatewaySession_listCapabilities_Params promised by a client call.
type CapGatewaySession_listCapabilities_Params_Future struct{ *capnp.Future }

func (f CapGatewaySession_listCapabilities_Params_Future) Struct() (CapGatewaySession_listCapabilities_Params, error) {
	p, err := f.Future.Ptr()
	return CapGatewaySession_listCapabilities_Params(p.Struct()), err
}

type CapGatewaySession_listCapabilities_Results capnp.Struct

// CapGatewaySession_listCapabilities_Results_TypeID is the unique identifier for the type CapGatewaySession_listCapabilities_Results.
const CapGatewaySession_listCapabilities_Results_TypeID = 0xa2b15d1db4fa12d2

func NewCapGatewaySession_listCapabilities_Results(s *capnp.Segment) (CapGatewaySession_listCapabilities_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapGatewaySession_listCapabilities_Results(st), err
}

func NewRootCapGatewaySession_listCapabilities_Results(s *capnp.Segment) (CapGatewaySession_listCapabilities_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapGatewaySession_listCapabilities_Results(st), err
}

func ReadRootCapGatewaySession_listCapabilities_Results(msg *capnp.Message) (CapGatewaySession_listCapabilities_Results, error) {
	root, err := msg.Root()
	return CapGatewaySession_listCapabilities_Results(root.Struct()), err
}

func (s CapGatewaySession_listCapabilities_Results) String() string {
	str, _ := text.Marshal(0xa2b15d1db4fa12d2, capnp.Struct(s))
	return str
}

func (s CapGatewaySession_listCapabilities_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapGatewaySession_listCapabilities_Results) DecodeFromPtr(p capnp.Ptr) CapGatewaySession_listCapabilities_Results {
	return CapGatewaySession_listCapabilities_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapGatewaySession_listCapabilities_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapGatewaySession_listCapabilities_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapGatewaySession_listCapabilities_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapGatewaySession_listCapabilities_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapGatewaySession_listCapabilities_Results) InfoList() (CapabilityInfo_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return CapabilityInfo_List(p.List()), err
}

func (s CapGatewaySession_listCapabilities_Results) HasInfoList() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapGatewaySession_listCapabilities_Results) SetInfoList(v CapabilityInfo_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewInfoList sets the infoList field to a newly
// allocated CapabilityInfo_List, preferring placement in s's segment.
func (s CapGatewaySession_listCapabilities_Results) NewInfoList(n int32) (CapabilityInfo_List, error) {
	l, err := NewCapabilityInfo_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return CapabilityInfo_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// CapGatewaySession_listCapabilities_Results_List is a list of CapGatewaySession_listCapabilities_Results.
type CapGatewaySession_listCapabilities_Results_List = capnp.StructList[CapGatewaySession_listCapabilities_Results]

// NewCapGatewaySession_listCapabilities_Results creates a new list of CapGatewaySession_listCapabilities_Results.
func NewCapGatewaySession_listCapabilities_Results_List(s *capnp.Segment, sz int32) (CapGatewaySession_listCapabilities_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapGatewaySession_listCapabilities_Results](l), err
}

// CapGatewaySession_listCapabilities_Results_Future is a wrapper for a CapGatewaySession_listCapabilities_Results promised by a client call.
type CapGatewaySession_listCapabilities_Results_Future struct{ *capnp.Future }

func (f CapGatewaySession_listCapabilities_Results_Future) Struct() (CapGatewaySession_listCapabilities_Results, error) {
	p, err := f.Future.Ptr()
	return CapGatewaySession_listCapabilities_Results(p.Struct()), err
}

type CapGatewaySession_login_Params capnp.Struct

// CapGatewaySession_login_Params_TypeID is the unique identifier for the type CapGatewaySession_login_Params.
const CapGatewaySession_login_Params_TypeID = 0xc15a6f918b7c3038

func NewCapGatewaySession_login_Params(s *capnp.Segment) (CapGatewaySession_login_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_login_Params(st), err
}

func NewRootCapGatewaySession_login_Params(s *capnp.Segment) (CapGatewaySession_login_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_login_Params(st), err
}

func ReadRootCapGatewaySession_login_Params(msg *capnp.Message) (CapGatewaySession_login_Params, error) {
	root, err := msg.Root()
	return CapGatewaySession_login_Params(root.Struct()), err
}

func (s CapGatewaySession_login_Params) String() string {
	str, _ := text.Marshal(0xc15a6f918b7c3038, capnp.Struct(s))
	return str
}

func (s CapGatewaySession_login_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapGatewaySession_login_Params) DecodeFromPtr(p capnp.Ptr) CapGatewaySession_login_Params {
	return CapGatewaySession_login_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapGatewaySession_login_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapGatewaySession_login_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapGatewaySession_login_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapGatewaySession_login_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapGatewaySession_login_Params) ClientID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapGatewaySession_login_Params) HasClientID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapGatewaySession_login_Params) ClientIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapGatewaySession_login_Params) SetClientID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s CapGatewaySession_login_Params) Password() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s CapGatewaySession_login_Params) HasPassword() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s CapGatewaySession_login_Params) PasswordBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s CapGatewaySession_login_Params) SetPassword(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// CapGatewaySession_login_Params_List is a list of CapGatewaySession_login_Params.
type CapGatewaySession_login_Params_List = capnp.StructList[CapGatewaySession_login_Params]

// NewCapGatewaySession_login_Params creates a new list of CapGatewaySession_login_Params.
func NewCapGatewaySession_login_Params_List(s *capnp.Segment, sz int32) (CapGatewaySession_login_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[CapGatewaySession_login_Params](l), err
}

// CapGatewaySession_login_Params_Future is a wrapper for a CapGatewaySession_login_Params promised by a client call.
type CapGatewaySession_login_Params_Future struct{ *capnp.Future }

func (f CapGatewaySession_login_Params_Future) Struct() (CapGatewaySession_login_Params, error) {
	p, err := f.Future.Ptr()
	return CapGatewaySession_login_Params(p.Struct()), err
}

type CapGatewaySession_login_Results capnp.Struct

// CapGatewaySession_login_Results_TypeID is the unique identifier for the type CapGatewaySession_login_Results.
const CapGatewaySession_login_Results_TypeID = 0xce340b1ce0aa477c

func NewCapGatewaySession_login_Results(s *capnp.Segment) (CapGatewaySession_login_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_login_Results(st), err
}

func NewRootCapGatewaySession_login_Results(s *capnp.Segment) (CapGatewaySession_login_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_login_Results(st), err
}

func ReadRootCapGatewaySession_login_Results(msg *capnp.Message) (CapGatewaySession_login_Results, error) {
	root, err := msg.Root()
	return CapGatewaySession_login_Results(root.Struct()), err
}

func (s CapGatewaySession_login_Results) String() string {
	str, _ := text.Marshal(0xce340b1ce0aa477c, capnp.Struct(s))
	return str
}

func (s CapGatewaySession_login_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapGatewaySession_login_Results) DecodeFromPtr(p capnp.Ptr) CapGatewaySession_login_Results {
	return CapGatewaySession_login_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapGatewaySession_login_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapGatewaySession_login_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapGatewaySession_login_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapGatewaySession_login_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapGatewaySession_login_Results) AuthToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapGatewaySession_login_Results) HasAuthToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapGatewaySession_login_Results) AuthTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapGatewaySession_login_Results) SetAuthToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s CapGatewaySession_login_Results) RefreshToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s CapGatewaySession_login_Results) HasRefreshToken() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s CapGatewaySession_login_Results) RefreshTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s CapGatewaySession_login_Results) SetRefreshToken(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// CapGatewaySession_login_Results_List is a list of CapGatewaySession_login_Results.
type CapGatewaySession_login_Results_List = capnp.StructList[CapGatewaySession_login_Results]

// NewCapGatewaySession_login_Results creates a new list of CapGatewaySession_login_Results.
func NewCapGatewaySession_login_Results_List(s *capnp.Segment, sz int32) (CapGatewaySession_login_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[CapGatewaySession_login_Results](l), err
}

// CapGatewaySession_login_Results_Future is a wrapper for a CapGatewaySession_login_Results promised by a client call.
type CapGatewaySession_login_Results_Future struct{ *capnp.Future }

func (f CapGatewaySession_login_Results_Future) Struct() (CapGatewaySession_login_Results, error) {
	p, err := f.Future.Ptr()
	return CapGatewaySession_login_Results(p.Struct()), err
}

type CapGatewaySession_ping_Params capnp.Struct

// CapGatewaySession_ping_Params_TypeID is the unique identifier for the type CapGatewaySession_ping_Params.
const CapGatewaySession_ping_Params_TypeID = 0xc469005256c59d20

func NewCapGatewaySession_ping_Params(s *capnp.Segment) (CapGatewaySession_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapGatewaySession_ping_Params(st), err
}

func NewRootCapGatewaySession_ping_Params(s *capnp.Segment) (CapGatewaySession_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapGatewaySession_ping_Params(st), err
}

func ReadRootCapGatewaySession_ping_Params(msg *capnp.Message) (CapGatewaySession_ping_Params, error) {
	root, err := msg.Root()
	return CapGatewaySession_ping_Params(root.Struct()), err
}

func (s CapGatewaySession_ping_Params) String() string {
	str, _ := text.Marshal(0xc469005256c59d20, capnp.Struct(s))
	return str
}

func (s CapGatewaySession_ping_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapGatewaySession_ping_Params) DecodeFromPtr(p capnp.Ptr) CapGatewaySession_ping_Params {
	return CapGatewaySession_ping_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapGatewaySession_ping_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapGatewaySession_ping_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapGatewaySession_ping_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapGatewaySession_ping_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// CapGatewaySession_ping_Params_List is a list of CapGatewaySession_ping_Params.
type CapGatewaySession_ping_Params_List = capnp.StructList[CapGatewaySession_ping_Params]

// NewCapGatewaySession_ping_Params creates a new list of CapGatewaySession_ping_Params.
func NewCapGatewaySession_ping_Params_List(s *capnp.Segment, sz int32) (CapGatewaySession_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[CapGatewaySession_ping_Params](l), err
}

// CapGatewaySession_ping_Params_Future is a wrapper for a CapGatewaySession_ping_Params promised by a client call.
type CapGatewaySession_ping_Params_Future struct{ *capnp.Future }

func (f CapGatewaySession_ping_Params_Future) Struct() (CapGatewaySession_ping_Params, error) {
	p, err := f.Future.Ptr()
	return CapGatewaySession_ping_Params(p.Struct()), err
}

type CapGatewaySession_ping_Results capnp.Struct

// CapGatewaySession_ping_Results_TypeID is the unique identifier for the type CapGatewaySession_ping_Results.
const CapGatewaySession_ping_Results_TypeID = 0xa75445aa77986ace

func NewCapGatewaySession_ping_Results(s *capnp.Segment) (CapGatewaySession_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapGatewaySession_ping_Results(st), err
}

func NewRootCapGatewaySession_ping_Results(s *capnp.Segment) (CapGatewaySession_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapGatewaySession_ping_Results(st), err
}

func ReadRootCapGatewaySession_ping_Results(msg *capnp.Message) (CapGatewaySession_ping_Results, error) {
	root, err := msg.Root()
	return CapGatewaySession_ping_Results(root.Struct()), err
}

func (s CapGatewaySession_ping_Results) String() string {
	str, _ := text.Marshal(0xa75445aa77986ace, capnp.Struct(s))
	return str
}

func (s CapGatewaySession_ping_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapGatewaySession_ping_Results) DecodeFromPtr(p capnp.Ptr) CapGatewaySession_ping_Results {
	return CapGatewaySession_ping_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapGatewaySession_ping_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapGatewaySession_ping_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapGatewaySession_ping_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapGatewaySession_ping_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapGatewaySession_ping_Results) Reply() (ClientInfo, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return ClientInfo(p.Struct()), err
}

func (s CapGatewaySession_ping_Results) HasReply() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapGatewaySession_ping_Results) SetReply(v ClientInfo) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewReply sets the reply field to a newly
// allocated ClientInfo struct, preferring placement in s's segment.
func (s CapGatewaySession_ping_Results) NewReply() (ClientInfo, error) {
	ss, err := NewClientInfo(capnp.Struct(s).Segment())
	if err != nil {
		return ClientInfo{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// CapGatewaySession_ping_Results_List is a list of CapGatewaySession_ping_Results.
type CapGatewaySession_ping_Results_List = capnp.StructList[CapGatewaySession_ping_Results]

// NewCapGatewaySession_ping_Results creates a new list of CapGatewaySession_ping_Results.
func NewCapGatewaySession_ping_Results_List(s *capnp.Segment, sz int32) (CapGatewaySession_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapGatewaySession_ping_Results](l), err
}

// CapGatewaySession_ping_Results_Future is a wrapper for a CapGatewaySession_ping_Results promised by a client call.
type CapGatewaySession_ping_Results_Future struct{ *capnp.Future }

func (f CapGatewaySession_ping_Results_Future) Struct() (CapGatewaySession_ping_Results, error) {
	p, err := f.Future.Ptr()
	return CapGatewaySession_ping_Results(p.Struct()), err
}
func (p CapGatewaySession_ping_Results_Future) Reply() ClientInfo_Future {
	return ClientInfo_Future{Future: p.Future.Field(0, nil)}
}

type CapGatewaySession_refresh_Params capnp.Struct

// CapGatewaySession_refresh_Params_TypeID is the unique identifier for the type CapGatewaySession_refresh_Params.
const CapGatewaySession_refresh_Params_TypeID = 0xf811e6b8fd945038

func NewCapGatewaySession_refresh_Params(s *capnp.Segment) (CapGatewaySession_refresh_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_refresh_Params(st), err
}

func NewRootCapGatewaySession_refresh_Params(s *capnp.Segment) (CapGatewaySession_refresh_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_refresh_Params(st), err
}

func ReadRootCapGatewaySession_refresh_Params(msg *capnp.Message) (CapGatewaySession_refresh_Params, error) {
	root, err := msg.Root()
	return CapGatewaySession_refresh_Params(root.Struct()), err
}

func (s CapGatewaySession_refresh_Params) String() string {
	str, _ := text.Marshal(0xf811e6b8fd945038, capnp.Struct(s))
	return str
}

func (s CapGatewaySession_refresh_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapGatewaySession_refresh_Params) DecodeFromPtr(p capnp.Ptr) CapGatewaySession_refresh_Params {
	return CapGatewaySession_refresh_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapGatewaySession_refresh_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapGatewaySession_refresh_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapGatewaySession_refresh_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapGatewaySession_refresh_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapGatewaySession_refresh_Params) ClientID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapGatewaySession_refresh_Params) HasClientID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapGatewaySession_refresh_Params) ClientIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapGatewaySession_refresh_Params) SetClientID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s CapGatewaySession_refresh_Params) RefreshToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s CapGatewaySession_refresh_Params) HasRefreshToken() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s CapGatewaySession_refresh_Params) RefreshTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s CapGatewaySession_refresh_Params) SetRefreshToken(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// CapGatewaySession_refresh_Params_List is a list of CapGatewaySession_refresh_Params.
type CapGatewaySession_refresh_Params_List = capnp.StructList[CapGatewaySession_refresh_Params]

// NewCapGatewaySession_refresh_Params creates a new list of CapGatewaySession_refresh_Params.
func NewCapGatewaySession_refresh_Params_List(s *capnp.Segment, sz int32) (CapGatewaySession_refresh_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[CapGatewaySession_refresh_Params](l), err
}

// CapGatewaySession_refresh_Params_Future is a wrapper for a CapGatewaySession_refresh_Params promised by a client call.
type CapGatewaySession_refresh_Params_Future struct{ *capnp.Future }

func (f CapGatewaySession_refresh_Params_Future) Struct() (CapGatewaySession_refresh_Params, error) {
	p, err := f.Future.Ptr()
	return CapGatewaySession_refresh_Params(p.Struct()), err
}

type CapGatewaySession_refresh_Results capnp.Struct

// CapGatewaySession_refresh_Results_TypeID is the unique identifier for the type CapGatewaySession_refresh_Results.
const CapGatewaySession_refresh_Results_TypeID = 0xcf0b9e786839c3fc

func NewCapGatewaySession_refresh_Results(s *capnp.Segment) (CapGatewaySession_refresh_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_refresh_Results(st), err
}

func NewRootCapGatewaySession_refresh_Results(s *capnp.Segment) (CapGatewaySession_refresh_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapGatewaySession_refresh_Results(st), err
}

func ReadRootCapGatewaySession_refresh_Results(msg *capnp.Message) (CapGatewaySession_refresh_Results, error) {
	root, err := msg.Root()
	return CapGatewaySession_refresh_Results(root.Struct()), err
}

func (s CapGatewaySession_refresh_Results) String() string {
	str, _ := text.Marshal(0xcf0b9e786839c3fc, capnp.Struct(s))
	return str
}

func (s CapGatewaySession_refresh_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapGatewaySession_refresh_Results) DecodeFromPtr(p capnp.Ptr) CapGatewaySession_refresh_Results {
	return CapGatewaySession_refresh_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapGatewaySession_refresh_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapGatewaySession_refresh_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapGatewaySession_refresh_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapGatewaySession_refresh_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapGatewaySession_refresh_Results) AuthToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapGatewaySession_refresh_Results) HasAuthToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapGatewaySession_refresh_Results) AuthTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapGatewaySession_refresh_Results) SetAuthToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s CapGatewaySession_refresh_Results) RefreshToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s CapGatewaySession_refresh_Results) HasRefreshToken() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s CapGatewaySession_refresh_Results) RefreshTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s CapGatewaySession_refresh_Results) SetRefreshToken(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// CapGatewaySession_refresh_Results_List is a list of CapGatewaySession_refresh_Results.
type CapGatewaySession_refresh_Results_List = capnp.StructList[CapGatewaySession_refresh_Results]

// NewCapGatewaySession_refresh_Results creates a new list of CapGatewaySession_refresh_Results.
func NewCapGatewaySession_refresh_Results_List(s *capnp.Segment, sz int32) (CapGatewaySession_refresh_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[CapGatewaySession_refresh_Results](l), err
}

// CapGatewaySession_refresh_Results_Future is a wrapper for a CapGatewaySession_refresh_Results promised by a client call.
type CapGatewaySession_refresh_Results_Future struct{ *capnp.Future }

func (f CapGatewaySession_refresh_Results_Future) Struct() (CapGatewaySession_refresh_Results, error) {
	p, err := f.Future.Ptr()
	return CapGatewaySession_refresh_Results(p.Struct()), err
}

const schema_dd3a962266ddd0e3 = "x\xda\xb4T]H\x1cW\x14>\xe7\xde;\x8e\xe8Z" +
	"w\xbaJ_\xbaX\x8a\xa5Z\xd0\xae?-*\x95]" +
	"\xd4\xd6Zj\x99Y\xb5\xd0B\xa9\xa3\x9duGwg" +
	"\xa6;\xa3[A\x10\xfaR\xb0OB)\xa5\xd0B|" +
	"1,$\xc4\x10B\xcc[\x88>\x88`L\x82\x8fb" +
	" \x10\x12\xf2\xe4[\x90\x84\x09w\xf6o\x04\x83\x9a\x90" +
	"\xb7\xe5\xccw\xee\xf9\xbes\xbeo#U$\xc6\xdaj" +
	"\x0e\x04 \xca\x80P\xe1\xde{\xf7\xe8Z\xf8\xa7\xb5\x15" +
	"\x90>F\x00\x01E\x80\x8e=B\x08`\xe8\x09\x89\x02" +
	"\xba;\xd3\xffds_\x8e\xae\xfa\x01a\xba\x82\x80\xa1" +
	"\x16\xca\x01?o?\x9d\x19\x7f<|\x11\xa4zt\x1f" +
	"\xee\xee'>\xfc\xbbg\x1f\x04\xc2\x81\xc3\x94`\xe8\x07" +
	"*\x02\x84\xc6h\x16\xd0\xed\x8a,\xfc\xb9l\xfex\xab" +
	"\xf0\x9a\x07Z\xcf\xbf\xb6\xc5\x01\x07\x1f\xfc\xb7\xf9}\\" +
	"\xdf\xf0>3\xfe\xb5\x85\xfd\x8b\xc0\xdc+Ks\xf8u" +
	"\xa0j\x13\xa4zZ\x9e\x02\xd8\x11f=\x18j\xf1\xa0" +
	"\xcdL\xc4\xd0]\xfe\xd3\xdd\xfd,~\xff\xf3\xde?\xb6" +
	"A\xaag\xc7\xe0\xeb\xac\x0fC[\x1c3\xb2\xc1(\x8e" +
	"\xec2\x82\x00\xee\xc2`\xee\xc1\xfb\xd5\x9d;~^\x9b" +
	",\xc7y\xed1N\xfc\xf9\xed\xee\xe4o\xffW\xdf\xf1" +
	"\x03\xba\x85\x9b\x1c0$p\xc0\xef;\x0b\xcb\x91\xf1\xd5" +
	"C(S\xbf$\x1cq\xea]\xf2_/n<\x92\x9e" +
	"\xf9[/\x08Wy\xeb\x9a\x90\x85~79;\xa1Z" +
	"\xfa\xa7\x83\xa2\xeahYu\xbeuR\xb5\x0c\xab\xa7_" +
	"\xb5\x06\xf3\x85\x11\xcd\xb6u\xd3hM\xe9\xb6\xd3\xafZ" +
	"\xea\x84\x9e\xd2\x1d]\xb3\x1b\xe3\x9a=\x9brlP\x18" +
	"e\x00\x0c\x01\xa4\x9ao\x00\x94\x00E\xa5\x89\xa0\xab\x1b" +
	"\x09\xf3[\xddv\x00\x00\xdf\x01\x94)b\xd0=\xcc]" +
	"\xff*\xfc\x9e|\x19\x00y\xb14]8e\xba\xa5\x1b" +
	"S\xdeD1\xe5\xd8\xfe\x89\xed\x00J%E\xa5\x8e`" +
	"CF\xb3R\xf3\x18,\x9b\x02\x10\x83\xbe!\xf4\xf8\x90" +
	"\x94\xae\x19\xce\x90\x910AFT*Ko6s\x15" +
	"M\x14\x95N\x82\x12b\x1d\xf2b\x1b/F(*_" +
	"\x10t'\xf3\xad\x03\\Z\x00\x08\x06\x00]u\xd6I" +
	"\x8e\xce[\x9a\xbfvVu)sJ7\x1ae5#" +
	"\xaai\xfb\x8d\x99X\xaamg\xcd\xcc/\xaf\xc3\xc4\xdb" +
	"\xb3\xacfT\x9a\xb6_\xb5\xb7rS4\xdf\xc5\xd7\x17" +
	"\xa4\x02@\xc9\x87XL\xb6\xf4\xeb\x12\x10)-b9" +
	"}X\xb4\xbb\xa4\xb6\x03\x91\xc6D$\xc5\xe0\xf9\xf2>" +
	"\xf4\x09\x10\xa9WDZr0\x16S \xb5\xf5\x01\x91" +
	">\x12\xdd\xa2%\xb1\xe8I\x80\x186x\xcb\x8ca-" +
	"\x97\x12\xc3\xc5\x8c\x96\xc8hv2\x862\x96\xd7\xc0\x8e" +
	")\x9a*\xee 3\xa7Oj\xdf\xa9i\x8d;\xa2\xb0" +
	";\x90\xb0o\xb1\x808\xe7A\xe3\x9a]\xcb#\xe2\xbf" +
	"h\xfc\xa4\x8bN\xfb.\xea\xf9\xc8\x9c\xd1\x00\x8d\xd2\xf5" +
	"\x0a\x1aF\xa1\xd6\x9c\xd1\x8cs\x1f\xb5\xd0\xde\x18\x8f\xe6" +
	"#\xfb\xb6\xf9T\x9c\xf7\xaf$\xca\x1d\xe73\xdcY\x05" +
	"\xc9\x0d^\xdf\xa9\x89\x99>%1'\xeby\x19\x00\x00" +
	"\xff\xffD%\xde\x15"

func init() {
	schemas.Register(schema_dd3a962266ddd0e3,
		0xa2b15d1db4fa12d2,
		0xa75445aa77986ace,
		0xa84de8606bebcb5f,
		0xc15a6f918b7c3038,
		0xc469005256c59d20,
		0xc50a0c4801768ab0,
		0xcb873d36d35235d0,
		0xce340b1ce0aa477c,
		0xcf0b9e786839c3fc,
		0xf1a76030917cce82,
		0xf811e6b8fd945038)
}

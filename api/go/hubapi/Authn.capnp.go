// Code generated by capnpc-go. DO NOT EDIT.

package hubapi

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	fmt "fmt"
)

// Constants defined in Authn.capnp.
const (
	AuthnServiceName               = "authn"
	DefaultAccessTokenValiditySec  = int32(3600)
	DefaultRefreshTokenValiditySec = int32(1209600)
	CapNameUserAuthn               = "capUserAuthn"
	CapNameManageAuthn             = "capManageAuthn"
)

type UserProfile capnp.Struct

// UserProfile_TypeID is the unique identifier for the type UserProfile.
const UserProfile_TypeID = 0xcdce39482d244d4a

func NewUserProfile(s *capnp.Segment) (UserProfile, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return UserProfile(st), err
}

func NewRootUserProfile(s *capnp.Segment) (UserProfile, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return UserProfile(st), err
}

func ReadRootUserProfile(msg *capnp.Message) (UserProfile, error) {
	root, err := msg.Root()
	return UserProfile(root.Struct()), err
}

func (s UserProfile) String() string {
	str, _ := text.Marshal(0xcdce39482d244d4a, capnp.Struct(s))
	return str
}

func (s UserProfile) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (UserProfile) DecodeFromPtr(p capnp.Ptr) UserProfile {
	return UserProfile(capnp.Struct{}.DecodeFromPtr(p))
}

func (s UserProfile) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s UserProfile) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s UserProfile) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s UserProfile) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s UserProfile) LoginID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s UserProfile) HasLoginID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s UserProfile) LoginIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s UserProfile) SetLoginID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s UserProfile) Name() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s UserProfile) HasName() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s UserProfile) NameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s UserProfile) SetName(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// UserProfile_List is a list of UserProfile.
type UserProfile_List = capnp.StructList[UserProfile]

// NewUserProfile creates a new list of UserProfile.
func NewUserProfile_List(s *capnp.Segment, sz int32) (UserProfile_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[UserProfile](l), err
}

// UserProfile_Future is a wrapper for a UserProfile promised by a client call.
type UserProfile_Future struct{ *capnp.Future }

func (f UserProfile_Future) Struct() (UserProfile, error) {
	p, err := f.Future.Ptr()
	return UserProfile(p.Struct()), err
}

type CapAuthn capnp.Client

// CapAuthn_TypeID is the unique identifier for the type CapAuthn.
const CapAuthn_TypeID = 0xadc0216f564238ef

func (c CapAuthn) CapUserAuthn(ctx context.Context, params func(CapAuthn_capUserAuthn_Params) error) (CapAuthn_capUserAuthn_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xadc0216f564238ef,
			MethodID:      0,
			InterfaceName: "hubapi/Authn.capnp:CapAuthn",
			MethodName:    "capUserAuthn",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapAuthn_capUserAuthn_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapAuthn_capUserAuthn_Results_Future{Future: ans.Future()}, release
}
func (c CapAuthn) CapManageAuthn(ctx context.Context, params func(CapAuthn_capManageAuthn_Params) error) (CapAuthn_capManageAuthn_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xadc0216f564238ef,
			MethodID:      1,
			InterfaceName: "hubapi/Authn.capnp:CapAuthn",
			MethodName:    "capManageAuthn",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapAuthn_capManageAuthn_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapAuthn_capManageAuthn_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c CapAuthn) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c CapAuthn) AddRef() CapAuthn {
	return CapAuthn(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c CapAuthn) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c CapAuthn) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c CapAuthn) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (CapAuthn) DecodeFromPtr(p capnp.Ptr) CapAuthn {
	return CapAuthn(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c CapAuthn) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c CapAuthn) IsSame(other CapAuthn) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c CapAuthn) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c CapAuthn) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A CapAuthn_Server is a CapAuthn with a local implementation.
type CapAuthn_Server interface {
	CapUserAuthn(context.Context, CapAuthn_capUserAuthn) error

	CapManageAuthn(context.Context, CapAuthn_capManageAuthn) error
}

// CapAuthn_NewServer creates a new Server from an implementation of CapAuthn_Server.
func CapAuthn_NewServer(s CapAuthn_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(CapAuthn_Methods(nil, s), s, c)
}

// CapAuthn_ServerToClient creates a new Client from an implementation of CapAuthn_Server.
// The caller is responsible for calling Release on the returned Client.
func CapAuthn_ServerToClient(s CapAuthn_Server) CapAuthn {
	return CapAuthn(capnp.NewClient(CapAuthn_NewServer(s)))
}

// CapAuthn_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func CapAuthn_Methods(methods []server.Method, s CapAuthn_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xadc0216f564238ef,
			MethodID:      0,
			InterfaceName: "hubapi/Authn.capnp:CapAuthn",
			MethodName:    "capUserAuthn",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CapUserAuthn(ctx, CapAuthn_capUserAuthn{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xadc0216f564238ef,
			MethodID:      1,
			InterfaceName: "hubapi/Authn.capnp:CapAuthn",
			MethodName:    "capManageAuthn",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CapManageAuthn(ctx, CapAuthn_capManageAuthn{call})
		},
	})

	return methods
}

// CapAuthn_capUserAuthn holds the state for a server call to CapAuthn.capUserAuthn.
// See server.Call for documentation.
type CapAuthn_capUserAuthn struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapAuthn_capUserAuthn) Args() CapAuthn_capUserAuthn_Params {
	return CapAuthn_capUserAuthn_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapAuthn_capUserAuthn) AllocResults() (CapAuthn_capUserAuthn_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capUserAuthn_Results(r), err
}

// CapAuthn_capManageAuthn holds the state for a server call to CapAuthn.capManageAuthn.
// See server.Call for documentation.
type CapAuthn_capManageAuthn struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapAuthn_capManageAuthn) Args() CapAuthn_capManageAuthn_Params {
	return CapAuthn_capManageAuthn_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapAuthn_capManageAuthn) AllocResults() (CapAuthn_capManageAuthn_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capManageAuthn_Results(r), err
}

// CapAuthn_List is a list of CapAuthn.
type CapAuthn_List = capnp.CapList[CapAuthn]

// NewCapAuthn creates a new list of CapAuthn.
func NewCapAuthn_List(s *capnp.Segment, sz int32) (CapAuthn_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[CapAuthn](l), err
}

type CapAuthn_capUserAuthn_Params capnp.Struct

// CapAuthn_capUserAuthn_Params_TypeID is the unique identifier for the type CapAuthn_capUserAuthn_Params.
const CapAuthn_capUserAuthn_Params_TypeID = 0xefbb76feba0110de

func NewCapAuthn_capUserAuthn_Params(s *capnp.Segment) (CapAuthn_capUserAuthn_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capUserAuthn_Params(st), err
}

func NewRootCapAuthn_capUserAuthn_Params(s *capnp.Segment) (CapAuthn_capUserAuthn_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capUserAuthn_Params(st), err
}

func ReadRootCapAuthn_capUserAuthn_Params(msg *capnp.Message) (CapAuthn_capUserAuthn_Params, error) {
	root, err := msg.Root()
	return CapAuthn_capUserAuthn_Params(root.Struct()), err
}

func (s CapAuthn_capUserAuthn_Params) String() string {
	str, _ := text.Marshal(0xefbb76feba0110de, capnp.Struct(s))
	return str
}

func (s CapAuthn_capUserAuthn_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapAuthn_capUserAuthn_Params) DecodeFromPtr(p capnp.Ptr) CapAuthn_capUserAuthn_Params {
	return CapAuthn_capUserAuthn_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapAuthn_capUserAuthn_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapAuthn_capUserAuthn_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapAuthn_capUserAuthn_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapAuthn_capUserAuthn_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapAuthn_capUserAuthn_Params) ClientID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapAuthn_capUserAuthn_Params) HasClientID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapAuthn_capUserAuthn_Params) ClientIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapAuthn_capUserAuthn_Params) SetClientID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapAuthn_capUserAuthn_Params_List is a list of CapAuthn_capUserAuthn_Params.
type CapAuthn_capUserAuthn_Params_List = capnp.StructList[CapAuthn_capUserAuthn_Params]

// NewCapAuthn_capUserAuthn_Params creates a new list of CapAuthn_capUserAuthn_Params.
func NewCapAuthn_capUserAuthn_Params_List(s *capnp.Segment, sz int32) (CapAuthn_capUserAuthn_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapAuthn_capUserAuthn_Params](l), err
}

// CapAuthn_capUserAuthn_Params_Future is a wrapper for a CapAuthn_capUserAuthn_Params promised by a client call.
type CapAuthn_capUserAuthn_Params_Future struct{ *capnp.Future }

func (f CapAuthn_capUserAuthn_Params_Future) Struct() (CapAuthn_capUserAuthn_Params, error) {
	p, err := f.Future.Ptr()
	return CapAuthn_capUserAuthn_Params(p.Struct()), err
}

type CapAuthn_capUserAuthn_Results capnp.Struct

// CapAuthn_capUserAuthn_Results_TypeID is the unique identifier for the type CapAuthn_capUserAuthn_Results.
const CapAuthn_capUserAuthn_Results_TypeID = 0xc929e07cd708a78a

func NewCapAuthn_capUserAuthn_Results(s *capnp.Segment) (CapAuthn_capUserAuthn_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capUserAuthn_Results(st), err
}

func NewRootCapAuthn_capUserAuthn_Results(s *capnp.Segment) (CapAuthn_capUserAuthn_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capUserAuthn_Results(st), err
}

func ReadRootCapAuthn_capUserAuthn_Results(msg *capnp.Message) (CapAuthn_capUserAuthn_Results, error) {
	root, err := msg.Root()
	return CapAuthn_capUserAuthn_Results(root.Struct()), err
}

func (s CapAuthn_capUserAuthn_Results) String() string {
	str, _ := text.Marshal(0xc929e07cd708a78a, capnp.Struct(s))
	return str
}

func (s CapAuthn_capUserAuthn_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapAuthn_capUserAuthn_Results) DecodeFromPtr(p capnp.Ptr) CapAuthn_capUserAuthn_Results {
	return CapAuthn_capUserAuthn_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapAuthn_capUserAuthn_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapAuthn_capUserAuthn_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapAuthn_capUserAuthn_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapAuthn_capUserAuthn_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapAuthn_capUserAuthn_Results) Cap() CapUserAuthn {
	p, _ := capnp.Struct(s).Ptr(0)
	return CapUserAuthn(p.Interface().Client())
}

func (s CapAuthn_capUserAuthn_Results) HasCap() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapAuthn_capUserAuthn_Results) SetCap(v CapUserAuthn) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// CapAuthn_capUserAuthn_Results_List is a list of CapAuthn_capUserAuthn_Results.
type CapAuthn_capUserAuthn_Results_List = capnp.StructList[CapAuthn_capUserAuthn_Results]

// NewCapAuthn_capUserAuthn_Results creates a new list of CapAuthn_capUserAuthn_Results.
func NewCapAuthn_capUserAuthn_Results_List(s *capnp.Segment, sz int32) (CapAuthn_capUserAuthn_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapAuthn_capUserAuthn_Results](l), err
}

// CapAuthn_capUserAuthn_Results_Future is a wrapper for a CapAuthn_capUserAuthn_Results promised by a client call.
type CapAuthn_capUserAuthn_Results_Future struct{ *capnp.Future }

func (f CapAuthn_capUserAuthn_Results_Future) Struct() (CapAuthn_capUserAuthn_Results, error) {
	p, err := f.Future.Ptr()
	return CapAuthn_capUserAuthn_Results(p.Struct()), err
}
func (p CapAuthn_capUserAuthn_Results_Future) Cap() CapUserAuthn {
	return CapUserAuthn(p.Future.Field(0, nil).Client())
}

type CapAuthn_capManageAuthn_Params capnp.Struct

// CapAuthn_capManageAuthn_Params_TypeID is the unique identifier for the type CapAuthn_capManageAuthn_Params.
const CapAuthn_capManageAuthn_Params_TypeID = 0xc93833e44515d43e

func NewCapAuthn_capManageAuthn_Params(s *capnp.Segment) (CapAuthn_capManageAuthn_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capManageAuthn_Params(st), err
}

func NewRootCapAuthn_capManageAuthn_Params(s *capnp.Segment) (CapAuthn_capManageAuthn_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capManageAuthn_Params(st), err
}

func ReadRootCapAuthn_capManageAuthn_Params(msg *capnp.Message) (CapAuthn_capManageAuthn_Params, error) {
	root, err := msg.Root()
	return CapAuthn_capManageAuthn_Params(root.Struct()), err
}

func (s CapAuthn_capManageAuthn_Params) String() string {
	str, _ := text.Marshal(0xc93833e44515d43e, capnp.Struct(s))
	return str
}

func (s CapAuthn_capManageAuthn_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapAuthn_capManageAuthn_Params) DecodeFromPtr(p capnp.Ptr) CapAuthn_capManageAuthn_Params {
	return CapAuthn_capManageAuthn_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapAuthn_capManageAuthn_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapAuthn_capManageAuthn_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapAuthn_capManageAuthn_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapAuthn_capManageAuthn_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapAuthn_capManageAuthn_Params) ClientID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapAuthn_capManageAuthn_Params) HasClientID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapAuthn_capManageAuthn_Params) ClientIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapAuthn_capManageAuthn_Params) SetClientID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapAuthn_capManageAuthn_Params_List is a list of CapAuthn_capManageAuthn_Params.
type CapAuthn_capManageAuthn_Params_List = capnp.StructList[CapAuthn_capManageAuthn_Params]

// NewCapAuthn_capManageAuthn_Params creates a new list of CapAuthn_capManageAuthn_Params.
func NewCapAuthn_capManageAuthn_Params_List(s *capnp.Segment, sz int32) (CapAuthn_capManageAuthn_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapAuthn_capManageAuthn_Params](l), err
}

// CapAuthn_capManageAuthn_Params_Future is a wrapper for a CapAuthn_capManageAuthn_Params promised by a client call.
type CapAuthn_capManageAuthn_Params_Future struct{ *capnp.Future }

func (f CapAuthn_capManageAuthn_Params_Future) Struct() (CapAuthn_capManageAuthn_Params, error) {
	p, err := f.Future.Ptr()
	return CapAuthn_capManageAuthn_Params(p.Struct()), err
}

type CapAuthn_capManageAuthn_Results capnp.Struct

// CapAuthn_capManageAuthn_Results_TypeID is the unique identifier for the type CapAuthn_capManageAuthn_Results.
const CapAuthn_capManageAuthn_Results_TypeID = 0xf0946743a7eb5a01

func NewCapAuthn_capManageAuthn_Results(s *capnp.Segment) (CapAuthn_capManageAuthn_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capManageAuthn_Results(st), err
}

func NewRootCapAuthn_capManageAuthn_Results(s *capnp.Segment) (CapAuthn_capManageAuthn_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapAuthn_capManageAuthn_Results(st), err
}

func ReadRootCapAuthn_capManageAuthn_Results(msg *capnp.Message) (CapAuthn_capManageAuthn_Results, error) {
	root, err := msg.Root()
	return CapAuthn_capManageAuthn_Results(root.Struct()), err
}

func (s CapAuthn_capManageAuthn_Results) String() string {
	str, _ := text.Marshal(0xf0946743a7eb5a01, capnp.Struct(s))
	return str
}

func (s CapAuthn_capManageAuthn_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapAuthn_capManageAuthn_Results) DecodeFromPtr(p capnp.Ptr) CapAuthn_capManageAuthn_Results {
	return CapAuthn_capManageAuthn_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapAuthn_capManageAuthn_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapAuthn_capManageAuthn_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapAuthn_capManageAuthn_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapAuthn_capManageAuthn_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapAuthn_capManageAuthn_Results) Cap() CapManageAuthn {
	p, _ := capnp.Struct(s).Ptr(0)
	return CapManageAuthn(p.Interface().Client())
}

func (s CapAuthn_capManageAuthn_Results) HasCap() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapAuthn_capManageAuthn_Results) SetCap(v CapManageAuthn) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// CapAuthn_capManageAuthn_Results_List is a list of CapAuthn_capManageAuthn_Results.
type CapAuthn_capManageAuthn_Results_List = capnp.StructList[CapAuthn_capManageAuthn_Results]

// NewCapAuthn_capManageAuthn_Results creates a new list of CapAuthn_capManageAuthn_Results.
func NewCapAuthn_capManageAuthn_Results_List(s *capnp.Segment, sz int32) (CapAuthn_capManageAuthn_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapAuthn_capManageAuthn_Results](l), err
}

// CapAuthn_capManageAuthn_Results_Future is a wrapper for a CapAuthn_capManageAuthn_Results promised by a client call.
type CapAuthn_capManageAuthn_Results_Future struct{ *capnp.Future }

func (f CapAuthn_capManageAuthn_Results_Future) Struct() (CapAuthn_capManageAuthn_Results, error) {
	p, err := f.Future.Ptr()
	return CapAuthn_capManageAuthn_Results(p.Struct()), err
}
func (p CapAuthn_capManageAuthn_Results_Future) Cap() CapManageAuthn {
	return CapManageAuthn(p.Future.Field(0, nil).Client())
}

type CapManageAuthn capnp.Client

// CapManageAuthn_TypeID is the unique identifier for the type CapManageAuthn.
const CapManageAuthn_TypeID = 0x88a16fc7ce91c2bc

func (c CapManageAuthn) AddUser(ctx context.Context, params func(CapManageAuthn_addUser_Params) error) (CapManageAuthn_addUser_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x88a16fc7ce91c2bc,
			MethodID:      0,
			InterfaceName: "hubapi/Authn.capnp:CapManageAuthn",
			MethodName:    "addUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapManageAuthn_addUser_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapManageAuthn_addUser_Results_Future{Future: ans.Future()}, release
}
func (c CapManageAuthn) ListUsers(ctx context.Context, params func(CapManageAuthn_listUsers_Params) error) (CapManageAuthn_listUsers_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x88a16fc7ce91c2bc,
			MethodID:      1,
			InterfaceName: "hubapi/Authn.capnp:CapManageAuthn",
			MethodName:    "listUsers",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapManageAuthn_listUsers_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapManageAuthn_listUsers_Results_Future{Future: ans.Future()}, release
}
func (c CapManageAuthn) RemoveUser(ctx context.Context, params func(CapManageAuthn_removeUser_Params) error) (CapManageAuthn_removeUser_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x88a16fc7ce91c2bc,
			MethodID:      2,
			InterfaceName: "hubapi/Authn.capnp:CapManageAuthn",
			MethodName:    "removeUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapManageAuthn_removeUser_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapManageAuthn_removeUser_Results_Future{Future: ans.Future()}, release
}
func (c CapManageAuthn) ResetPassword(ctx context.Context, params func(CapManageAuthn_resetPassword_Params) error) (CapManageAuthn_resetPassword_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x88a16fc7ce91c2bc,
			MethodID:      3,
			InterfaceName: "hubapi/Authn.capnp:CapManageAuthn",
			MethodName:    "resetPassword",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapManageAuthn_resetPassword_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapManageAuthn_resetPassword_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c CapManageAuthn) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c CapManageAuthn) AddRef() CapManageAuthn {
	return CapManageAuthn(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c CapManageAuthn) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c CapManageAuthn) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c CapManageAuthn) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (CapManageAuthn) DecodeFromPtr(p capnp.Ptr) CapManageAuthn {
	return CapManageAuthn(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c CapManageAuthn) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c CapManageAuthn) IsSame(other CapManageAuthn) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c CapManageAuthn) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c CapManageAuthn) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A CapManageAuthn_Server is a CapManageAuthn with a local implementation.
type CapManageAuthn_Server interface {
	AddUser(context.Context, CapManageAuthn_addUser) error

	ListUsers(context.Context, CapManageAuthn_listUsers) error

	RemoveUser(context.Context, CapManageAuthn_removeUser) error

	ResetPassword(context.Context, CapManageAuthn_resetPassword) error
}

// CapManageAuthn_NewServer creates a new Server from an implementation of CapManageAuthn_Server.
func CapManageAuthn_NewServer(s CapManageAuthn_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(CapManageAuthn_Methods(nil, s), s, c)
}

// CapManageAuthn_ServerToClient creates a new Client from an implementation of CapManageAuthn_Server.
// The caller is responsible for calling Release on the returned Client.
func CapManageAuthn_ServerToClient(s CapManageAuthn_Server) CapManageAuthn {
	return CapManageAuthn(capnp.NewClient(CapManageAuthn_NewServer(s)))
}

// CapManageAuthn_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func CapManageAuthn_Methods(methods []server.Method, s CapManageAuthn_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x88a16fc7ce91c2bc,
			MethodID:      0,
			InterfaceName: "hubapi/Authn.capnp:CapManageAuthn",
			MethodName:    "addUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddUser(ctx, CapManageAuthn_addUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x88a16fc7ce91c2bc,
			MethodID:      1,
			InterfaceName: "hubapi/Authn.capnp:CapManageAuthn",
			MethodName:    "listUsers",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ListUsers(ctx, CapManageAuthn_listUsers{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x88a16fc7ce91c2bc,
			MethodID:      2,
			InterfaceName: "hubapi/Authn.capnp:CapManageAuthn",
			MethodName:    "removeUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.RemoveUser(ctx, CapManageAuthn_removeUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x88a16fc7ce91c2bc,
			MethodID:      3,
			InterfaceName: "hubapi/Authn.capnp:CapManageAuthn",
			MethodName:    "resetPassword",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ResetPassword(ctx, CapManageAuthn_resetPassword{call})
		},
	})

	return methods
}

// CapManageAuthn_addUser holds the state for a server call to CapManageAuthn.addUser.
// See server.Call for documentation.
type CapManageAuthn_addUser struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapManageAuthn_addUser) Args() CapManageAuthn_addUser_Params {
	return CapManageAuthn_addUser_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapManageAuthn_addUser) AllocResults() (CapManageAuthn_addUser_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_addUser_Results(r), err
}

// CapManageAuthn_listUsers holds the state for a server call to CapManageAuthn.listUsers.
// See server.Call for documentation.
type CapManageAuthn_listUsers struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapManageAuthn_listUsers) Args() CapManageAuthn_listUsers_Params {
	return CapManageAuthn_listUsers_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapManageAuthn_listUsers) AllocResults() (CapManageAuthn_listUsers_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_listUsers_Results(r), err
}

// CapManageAuthn_removeUser holds the state for a server call to CapManageAuthn.removeUser.
// See server.Call for documentation.
type CapManageAuthn_removeUser struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapManageAuthn_removeUser) Args() CapManageAuthn_removeUser_Params {
	return CapManageAuthn_removeUser_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapManageAuthn_removeUser) AllocResults() (CapManageAuthn_removeUser_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapManageAuthn_removeUser_Results(r), err
}

// CapManageAuthn_resetPassword holds the state for a server call to CapManageAuthn.resetPassword.
// See server.Call for documentation.
type CapManageAuthn_resetPassword struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapManageAuthn_resetPassword) Args() CapManageAuthn_resetPassword_Params {
	return CapManageAuthn_resetPassword_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapManageAuthn_resetPassword) AllocResults() (CapManageAuthn_resetPassword_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_resetPassword_Results(r), err
}

// CapManageAuthn_List is a list of CapManageAuthn.
type CapManageAuthn_List = capnp.CapList[CapManageAuthn]

// NewCapManageAuthn creates a new list of CapManageAuthn.
func NewCapManageAuthn_List(s *capnp.Segment, sz int32) (CapManageAuthn_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[CapManageAuthn](l), err
}

type CapManageAuthn_addUser_Params capnp.Struct

// CapManageAuthn_addUser_Params_TypeID is the unique identifier for the type CapManageAuthn_addUser_Params.
const CapManageAuthn_addUser_Params_TypeID = 0xf16244ccb186a63b

func NewCapManageAuthn_addUser_Params(s *capnp.Segment) (CapManageAuthn_addUser_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_addUser_Params(st), err
}

func NewRootCapManageAuthn_addUser_Params(s *capnp.Segment) (CapManageAuthn_addUser_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_addUser_Params(st), err
}

func ReadRootCapManageAuthn_addUser_Params(msg *capnp.Message) (CapManageAuthn_addUser_Params, error) {
	root, err := msg.Root()
	return CapManageAuthn_addUser_Params(root.Struct()), err
}

func (s CapManageAuthn_addUser_Params) String() string {
	str, _ := text.Marshal(0xf16244ccb186a63b, capnp.Struct(s))
	return str
}

func (s CapManageAuthn_addUser_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapManageAuthn_addUser_Params) DecodeFromPtr(p capnp.Ptr) CapManageAuthn_addUser_Params {
	return CapManageAuthn_addUser_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapManageAuthn_addUser_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapManageAuthn_addUser_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapManageAuthn_addUser_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapManageAuthn_addUser_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapManageAuthn_addUser_Params) LoginID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapManageAuthn_addUser_Params) HasLoginID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapManageAuthn_addUser_Params) LoginIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapManageAuthn_addUser_Params) SetLoginID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapManageAuthn_addUser_Params_List is a list of CapManageAuthn_addUser_Params.
type CapManageAuthn_addUser_Params_List = capnp.StructList[CapManageAuthn_addUser_Params]

// NewCapManageAuthn_addUser_Params creates a new list of CapManageAuthn_addUser_Params.
func NewCapManageAuthn_addUser_Params_List(s *capnp.Segment, sz int32) (CapManageAuthn_addUser_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapManageAuthn_addUser_Params](l), err
}

// CapManageAuthn_addUser_Params_Future is a wrapper for a CapManageAuthn_addUser_Params promised by a client call.
type CapManageAuthn_addUser_Params_Future struct{ *capnp.Future }

func (f CapManageAuthn_addUser_Params_Future) Struct() (CapManageAuthn_addUser_Params, error) {
	p, err := f.Future.Ptr()
	return CapManageAuthn_addUser_Params(p.Struct()), err
}

type CapManageAuthn_addUser_Results capnp.Struct

// CapManageAuthn_addUser_Results_TypeID is the unique identifier for the type CapManageAuthn_addUser_Results.
const CapManageAuthn_addUser_Results_TypeID = 0xb7815fcecda6b54c

func NewCapManageAuthn_addUser_Results(s *capnp.Segment) (CapManageAuthn_addUser_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_addUser_Results(st), err
}

func NewRootCapManageAuthn_addUser_Results(s *capnp.Segment) (CapManageAuthn_addUser_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_addUser_Results(st), err
}

func ReadRootCapManageAuthn_addUser_Results(msg *capnp.Message) (CapManageAuthn_addUser_Results, error) {
	root, err := msg.Root()
	return CapManageAuthn_addUser_Results(root.Struct()), err
}

func (s CapManageAuthn_addUser_Results) String() string {
	str, _ := text.Marshal(0xb7815fcecda6b54c, capnp.Struct(s))
	return str
}

func (s CapManageAuthn_addUser_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapManageAuthn_addUser_Results) DecodeFromPtr(p capnp.Ptr) CapManageAuthn_addUser_Results {
	return CapManageAuthn_addUser_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapManageAuthn_addUser_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapManageAuthn_addUser_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapManageAuthn_addUser_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapManageAuthn_addUser_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapManageAuthn_addUser_Results) Password() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapManageAuthn_addUser_Results) HasPassword() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapManageAuthn_addUser_Results) PasswordBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapManageAuthn_addUser_Results) SetPassword(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapManageAuthn_addUser_Results_List is a list of CapManageAuthn_addUser_Results.
type CapManageAuthn_addUser_Results_List = capnp.StructList[CapManageAuthn_addUser_Results]

// NewCapManageAuthn_addUser_Results creates a new list of CapManageAuthn_addUser_Results.
func NewCapManageAuthn_addUser_Results_List(s *capnp.Segment, sz int32) (CapManageAuthn_addUser_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapManageAuthn_addUser_Results](l), err
}

// CapManageAuthn_addUser_Results_Future is a wrapper for a CapManageAuthn_addUser_Results promised by a client call.
type CapManageAuthn_addUser_Results_Future struct{ *capnp.Future }

func (f CapManageAuthn_addUser_Results_Future) Struct() (CapManageAuthn_addUser_Results, error) {
	p, err := f.Future.Ptr()
	return CapManageAuthn_addUser_Results(p.Struct()), err
}

type CapManageAuthn_listUsers_Params capnp.Struct

// CapManageAuthn_listUsers_Params_TypeID is the unique identifier for the type CapManageAuthn_listUsers_Params.
const CapManageAuthn_listUsers_Params_TypeID = 0xfcdcc5587bf2f9d8

func NewCapManageAuthn_listUsers_Params(s *capnp.Segment) (CapManageAuthn_listUsers_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapManageAuthn_listUsers_Params(st), err
}

func NewRootCapManageAuthn_listUsers_Params(s *capnp.Segment) (CapManageAuthn_listUsers_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapManageAuthn_listUsers_Params(st), err
}

func ReadRootCapManageAuthn_listUsers_Params(msg *capnp.Message) (CapManageAuthn_listUsers_Params, error) {
	root, err := msg.Root()
	return CapManageAuthn_listUsers_Params(root.Struct()), err
}

func (s CapManageAuthn_listUsers_Params) String() string {
	str, _ := text.Marshal(0xfcdcc5587bf2f9d8, capnp.Struct(s))
	return str
}

func (s CapManageAuthn_listUsers_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapManageAuthn_listUsers_Params) DecodeFromPtr(p capnp.Ptr) CapManageAuthn_listUsers_Params {
	return CapManageAuthn_listUsers_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapManageAuthn_listUsers_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapManageAuthn_listUsers_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapManageAuthn_listUsers_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapManageAuthn_listUsers_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// CapManageAuthn_listUsers_Params_List is a list of CapManageAuthn_listUsers_Params.
type CapManageAuthn_listUsers_Params_List = capnp.StructList[CapManageAuthn_listUsers_Params]

// NewCapManageAuthn_listUsers_Params creates a new list of CapManageAuthn_listUsers_Params.
func NewCapManageAuthn_listUsers_Params_List(s *capnp.Segment, sz int32) (CapManageAuthn_listUsers_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[CapManageAuthn_listUsers_Params](l), err
}

// CapManageAuthn_listUsers_Params_Future is a wrapper for a CapManageAuthn_listUsers_Params promised by a client call.
type CapManageAuthn_listUsers_Params_Future struct{ *capnp.Future }

func (f CapManageAuthn_listUsers_Params_Future) Struct() (CapManageAuthn_listUsers_Params, error) {
	p, err := f.Future.Ptr()
	return CapManageAuthn_listUsers_Params(p.Struct()), err
}

type CapManageAuthn_listUsers_Results capnp.Struct

// CapManageAuthn_listUsers_Results_TypeID is the unique identifier for the type CapManageAuthn_listUsers_Results.
const CapManageAuthn_listUsers_Results_TypeID = 0x8060c97a0e273ede

func NewCapManageAuthn_listUsers_Results(s *capnp.Segment) (CapManageAuthn_listUsers_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_listUsers_Results(st), err
}

func NewRootCapManageAuthn_listUsers_Results(s *capnp.Segment) (CapManageAuthn_listUsers_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_listUsers_Results(st), err
}

func ReadRootCapManageAuthn_listUsers_Results(msg *capnp.Message) (CapManageAuthn_listUsers_Results, error) {
	root, err := msg.Root()
	return CapManageAuthn_listUsers_Results(root.Struct()), err
}

func (s CapManageAuthn_listUsers_Results) String() string {
	str, _ := text.Marshal(0x8060c97a0e273ede, capnp.Struct(s))
	return str
}

func (s CapManageAuthn_listUsers_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapManageAuthn_listUsers_Results) DecodeFromPtr(p capnp.Ptr) CapManageAuthn_listUsers_Results {
	return CapManageAuthn_listUsers_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapManageAuthn_listUsers_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapManageAuthn_listUsers_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapManageAuthn_listUsers_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapManageAuthn_listUsers_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapManageAuthn_listUsers_Results) Profiles() (UserProfile_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return UserProfile_List(p.List()), err
}

func (s CapManageAuthn_listUsers_Results) HasProfiles() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapManageAuthn_listUsers_Results) SetProfiles(v UserProfile_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewProfiles sets the profiles field to a newly
// allocated UserProfile_List, preferring placement in s's segment.
func (s CapManageAuthn_listUsers_Results) NewProfiles(n int32) (UserProfile_List, error) {
	l, err := NewUserProfile_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return UserProfile_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// CapManageAuthn_listUsers_Results_List is a list of CapManageAuthn_listUsers_Results.
type CapManageAuthn_listUsers_Results_List = capnp.StructList[CapManageAuthn_listUsers_Results]

// NewCapManageAuthn_listUsers_Results creates a new list of CapManageAuthn_listUsers_Results.
func NewCapManageAuthn_listUsers_Results_List(s *capnp.Segment, sz int32) (CapManageAuthn_listUsers_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapManageAuthn_listUsers_Results](l), err
}

// CapManageAuthn_listUsers_Results_Future is a wrapper for a CapManageAuthn_listUsers_Results promised by a client call.
type CapManageAuthn_listUsers_Results_Future struct{ *capnp.Future }

func (f CapManageAuthn_listUsers_Results_Future) Struct() (CapManageAuthn_listUsers_Results, error) {
	p, err := f.Future.Ptr()
	return CapManageAuthn_listUsers_Results(p.Struct()), err
}

type CapManageAuthn_removeUser_Params capnp.Struct

// CapManageAuthn_removeUser_Params_TypeID is the unique identifier for the type CapManageAuthn_removeUser_Params.
const CapManageAuthn_removeUser_Params_TypeID = 0xe459e7faec337b55

func NewCapManageAuthn_removeUser_Params(s *capnp.Segment) (CapManageAuthn_removeUser_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_removeUser_Params(st), err
}

func NewRootCapManageAuthn_removeUser_Params(s *capnp.Segment) (CapManageAuthn_removeUser_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_removeUser_Params(st), err
}

func ReadRootCapManageAuthn_removeUser_Params(msg *capnp.Message) (CapManageAuthn_removeUser_Params, error) {
	root, err := msg.Root()
	return CapManageAuthn_removeUser_Params(root.Struct()), err
}

func (s CapManageAuthn_removeUser_Params) String() string {
	str, _ := text.Marshal(0xe459e7faec337b55, capnp.Struct(s))
	return str
}

func (s CapManageAuthn_removeUser_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapManageAuthn_removeUser_Params) DecodeFromPtr(p capnp.Ptr) CapManageAuthn_removeUser_Params {
	return CapManageAuthn_removeUser_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapManageAuthn_removeUser_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapManageAuthn_removeUser_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapManageAuthn_removeUser_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapManageAuthn_removeUser_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapManageAuthn_removeUser_Params) LoginID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapManageAuthn_removeUser_Params) HasLoginID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapManageAuthn_removeUser_Params) LoginIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapManageAuthn_removeUser_Params) SetLoginID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapManageAuthn_removeUser_Params_List is a list of CapManageAuthn_removeUser_Params.
type CapManageAuthn_removeUser_Params_List = capnp.StructList[CapManageAuthn_removeUser_Params]

// NewCapManageAuthn_removeUser_Params creates a new list of CapManageAuthn_removeUser_Params.
func NewCapManageAuthn_removeUser_Params_List(s *capnp.Segment, sz int32) (CapManageAuthn_removeUser_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapManageAuthn_removeUser_Params](l), err
}

// CapManageAuthn_removeUser_Params_Future is a wrapper for a CapManageAuthn_removeUser_Params promised by a client call.
type CapManageAuthn_removeUser_Params_Future struct{ *capnp.Future }

func (f CapManageAuthn_removeUser_Params_Future) Struct() (CapManageAuthn_removeUser_Params, error) {
	p, err := f.Future.Ptr()
	return CapManageAuthn_removeUser_Params(p.Struct()), err
}

type CapManageAuthn_removeUser_Results capnp.Struct

// CapManageAuthn_removeUser_Results_TypeID is the unique identifier for the type CapManageAuthn_removeUser_Results.
const CapManageAuthn_removeUser_Results_TypeID = 0xa818262095a69d17

func NewCapManageAuthn_removeUser_Results(s *capnp.Segment) (CapManageAuthn_removeUser_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapManageAuthn_removeUser_Results(st), err
}

func NewRootCapManageAuthn_removeUser_Results(s *capnp.Segment) (CapManageAuthn_removeUser_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapManageAuthn_removeUser_Results(st), err
}

func ReadRootCapManageAuthn_removeUser_Results(msg *capnp.Message) (CapManageAuthn_removeUser_Results, error) {
	root, err := msg.Root()
	return CapManageAuthn_removeUser_Results(root.Struct()), err
}

func (s CapManageAuthn_removeUser_Results) String() string {
	str, _ := text.Marshal(0xa818262095a69d17, capnp.Struct(s))
	return str
}

func (s CapManageAuthn_removeUser_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapManageAuthn_removeUser_Results) DecodeFromPtr(p capnp.Ptr) CapManageAuthn_removeUser_Results {
	return CapManageAuthn_removeUser_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapManageAuthn_removeUser_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapManageAuthn_removeUser_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapManageAuthn_removeUser_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapManageAuthn_removeUser_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// CapManageAuthn_removeUser_Results_List is a list of CapManageAuthn_removeUser_Results.
type CapManageAuthn_removeUser_Results_List = capnp.StructList[CapManageAuthn_removeUser_Results]

// NewCapManageAuthn_removeUser_Results creates a new list of CapManageAuthn_removeUser_Results.
func NewCapManageAuthn_removeUser_Results_List(s *capnp.Segment, sz int32) (CapManageAuthn_removeUser_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[CapManageAuthn_removeUser_Results](l), err
}

// CapManageAuthn_removeUser_Results_Future is a wrapper for a CapManageAuthn_removeUser_Results promised by a client call.
type CapManageAuthn_removeUser_Results_Future struct{ *capnp.Future }

func (f CapManageAuthn_removeUser_Results_Future) Struct() (CapManageAuthn_removeUser_Results, error) {
	p, err := f.Future.Ptr()
	return CapManageAuthn_removeUser_Results(p.Struct()), err
}

type CapManageAuthn_resetPassword_Params capnp.Struct

// CapManageAuthn_resetPassword_Params_TypeID is the unique identifier for the type CapManageAuthn_resetPassword_Params.
const CapManageAuthn_resetPassword_Params_TypeID = 0xea8e208f67747074

func NewCapManageAuthn_resetPassword_Params(s *capnp.Segment) (CapManageAuthn_resetPassword_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_resetPassword_Params(st), err
}

func NewRootCapManageAuthn_resetPassword_Params(s *capnp.Segment) (CapManageAuthn_resetPassword_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_resetPassword_Params(st), err
}

func ReadRootCapManageAuthn_resetPassword_Params(msg *capnp.Message) (CapManageAuthn_resetPassword_Params, error) {
	root, err := msg.Root()
	return CapManageAuthn_resetPassword_Params(root.Struct()), err
}

func (s CapManageAuthn_resetPassword_Params) String() string {
	str, _ := text.Marshal(0xea8e208f67747074, capnp.Struct(s))
	return str
}

func (s CapManageAuthn_resetPassword_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapManageAuthn_resetPassword_Params) DecodeFromPtr(p capnp.Ptr) CapManageAuthn_resetPassword_Params {
	return CapManageAuthn_resetPassword_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapManageAuthn_resetPassword_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapManageAuthn_resetPassword_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapManageAuthn_resetPassword_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapManageAuthn_resetPassword_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapManageAuthn_resetPassword_Params) LoginID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapManageAuthn_resetPassword_Params) HasLoginID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapManageAuthn_resetPassword_Params) LoginIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapManageAuthn_resetPassword_Params) SetLoginID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapManageAuthn_resetPassword_Params_List is a list of CapManageAuthn_resetPassword_Params.
type CapManageAuthn_resetPassword_Params_List = capnp.StructList[CapManageAuthn_resetPassword_Params]

// NewCapManageAuthn_resetPassword_Params creates a new list of CapManageAuthn_resetPassword_Params.
func NewCapManageAuthn_resetPassword_Params_List(s *capnp.Segment, sz int32) (CapManageAuthn_resetPassword_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapManageAuthn_resetPassword_Params](l), err
}

// CapManageAuthn_resetPassword_Params_Future is a wrapper for a CapManageAuthn_resetPassword_Params promised by a client call.
type CapManageAuthn_resetPassword_Params_Future struct{ *capnp.Future }

func (f CapManageAuthn_resetPassword_Params_Future) Struct() (CapManageAuthn_resetPassword_Params, error) {
	p, err := f.Future.Ptr()
	return CapManageAuthn_resetPassword_Params(p.Struct()), err
}

type CapManageAuthn_resetPassword_Results capnp.Struct

// CapManageAuthn_resetPassword_Results_TypeID is the unique identifier for the type CapManageAuthn_resetPassword_Results.
const CapManageAuthn_resetPassword_Results_TypeID = 0xfaa82702574f9d19

func NewCapManageAuthn_resetPassword_Results(s *capnp.Segment) (CapManageAuthn_resetPassword_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_resetPassword_Results(st), err
}

func NewRootCapManageAuthn_resetPassword_Results(s *capnp.Segment) (CapManageAuthn_resetPassword_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapManageAuthn_resetPassword_Results(st), err
}

func ReadRootCapManageAuthn_resetPassword_Results(msg *capnp.Message) (CapManageAuthn_resetPassword_Results, error) {
	root, err := msg.Root()
	return CapManageAuthn_resetPassword_Results(root.Struct()), err
}

func (s CapManageAuthn_resetPassword_Results) String() string {
	str, _ := text.Marshal(0xfaa82702574f9d19, capnp.Struct(s))
	return str
}

func (s CapManageAuthn_resetPassword_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapManageAuthn_resetPassword_Results) DecodeFromPtr(p capnp.Ptr) CapManageAuthn_resetPassword_Results {
	return CapManageAuthn_resetPassword_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapManageAuthn_resetPassword_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapManageAuthn_resetPassword_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapManageAuthn_resetPassword_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapManageAuthn_resetPassword_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapManageAuthn_resetPassword_Results) NewPassword() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapManageAuthn_resetPassword_Results) HasNewPassword() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapManageAuthn_resetPassword_Results) NewPasswordBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapManageAuthn_resetPassword_Results) SetNewPassword(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapManageAuthn_resetPassword_Results_List is a list of CapManageAuthn_resetPassword_Results.
type CapManageAuthn_resetPassword_Results_List = capnp.StructList[CapManageAuthn_resetPassword_Results]

// NewCapManageAuthn_resetPassword_Results creates a new list of CapManageAuthn_resetPassword_Results.
func NewCapManageAuthn_resetPassword_Results_List(s *capnp.Segment, sz int32) (CapManageAuthn_resetPassword_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapManageAuthn_resetPassword_Results](l), err
}

// CapManageAuthn_resetPassword_Results_Future is a wrapper for a CapManageAuthn_resetPassword_Results promised by a client call.
type CapManageAuthn_resetPassword_Results_Future struct{ *capnp.Future }

func (f CapManageAuthn_resetPassword_Results_Future) Struct() (CapManageAuthn_resetPassword_Results, error) {
	p, err := f.Future.Ptr()
	return CapManageAuthn_resetPassword_Results(p.Struct()), err
}

type CapUserAuthn capnp.Client

// CapUserAuthn_TypeID is the unique identifier for the type CapUserAuthn.
const CapUserAuthn_TypeID = 0xb42266ae95764a2f

func (c CapUserAuthn) GetProfile(ctx context.Context, params func(CapUserAuthn_getProfile_Params) error) (CapUserAuthn_getProfile_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      0,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "getProfile",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapUserAuthn_getProfile_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapUserAuthn_getProfile_Results_Future{Future: ans.Future()}, release
}
func (c CapUserAuthn) Login(ctx context.Context, params func(CapUserAuthn_login_Params) error) (CapUserAuthn_login_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      1,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "login",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapUserAuthn_login_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapUserAuthn_login_Results_Future{Future: ans.Future()}, release
}
func (c CapUserAuthn) Logout(ctx context.Context, params func(CapUserAuthn_logout_Params) error) (CapUserAuthn_logout_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      2,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "logout",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapUserAuthn_logout_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapUserAuthn_logout_Results_Future{Future: ans.Future()}, release
}
func (c CapUserAuthn) Refresh(ctx context.Context, params func(CapUserAuthn_refresh_Params) error) (CapUserAuthn_refresh_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      3,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "refresh",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapUserAuthn_refresh_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapUserAuthn_refresh_Results_Future{Future: ans.Future()}, release
}
func (c CapUserAuthn) SetPassword(ctx context.Context, params func(CapUserAuthn_setPassword_Params) error) (CapUserAuthn_setPassword_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      4,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "setPassword",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapUserAuthn_setPassword_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapUserAuthn_setPassword_Results_Future{Future: ans.Future()}, release
}
func (c CapUserAuthn) SetProfile(ctx context.Context, params func(CapUserAuthn_setProfile_Params) error) (CapUserAuthn_setProfile_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      5,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "setProfile",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(CapUserAuthn_setProfile_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return CapUserAuthn_setProfile_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c CapUserAuthn) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c CapUserAuthn) AddRef() CapUserAuthn {
	return CapUserAuthn(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c CapUserAuthn) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c CapUserAuthn) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c CapUserAuthn) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (CapUserAuthn) DecodeFromPtr(p capnp.Ptr) CapUserAuthn {
	return CapUserAuthn(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c CapUserAuthn) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c CapUserAuthn) IsSame(other CapUserAuthn) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c CapUserAuthn) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c CapUserAuthn) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A CapUserAuthn_Server is a CapUserAuthn with a local implementation.
type CapUserAuthn_Server interface {
	GetProfile(context.Context, CapUserAuthn_getProfile) error

	Login(context.Context, CapUserAuthn_login) error

	Logout(context.Context, CapUserAuthn_logout) error

	Refresh(context.Context, CapUserAuthn_refresh) error

	SetPassword(context.Context, CapUserAuthn_setPassword) error

	SetProfile(context.Context, CapUserAuthn_setProfile) error
}

// CapUserAuthn_NewServer creates a new Server from an implementation of CapUserAuthn_Server.
func CapUserAuthn_NewServer(s CapUserAuthn_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(CapUserAuthn_Methods(nil, s), s, c)
}

// CapUserAuthn_ServerToClient creates a new Client from an implementation of CapUserAuthn_Server.
// The caller is responsible for calling Release on the returned Client.
func CapUserAuthn_ServerToClient(s CapUserAuthn_Server) CapUserAuthn {
	return CapUserAuthn(capnp.NewClient(CapUserAuthn_NewServer(s)))
}

// CapUserAuthn_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func CapUserAuthn_Methods(methods []server.Method, s CapUserAuthn_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 6)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      0,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "getProfile",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetProfile(ctx, CapUserAuthn_getProfile{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      1,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "login",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Login(ctx, CapUserAuthn_login{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      2,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "logout",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Logout(ctx, CapUserAuthn_logout{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      3,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "refresh",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Refresh(ctx, CapUserAuthn_refresh{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      4,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "setPassword",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SetPassword(ctx, CapUserAuthn_setPassword{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb42266ae95764a2f,
			MethodID:      5,
			InterfaceName: "hubapi/Authn.capnp:CapUserAuthn",
			MethodName:    "setProfile",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SetProfile(ctx, CapUserAuthn_setProfile{call})
		},
	})

	return methods
}

// CapUserAuthn_getProfile holds the state for a server call to CapUserAuthn.getProfile.
// See server.Call for documentation.
type CapUserAuthn_getProfile struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapUserAuthn_getProfile) Args() CapUserAuthn_getProfile_Params {
	return CapUserAuthn_getProfile_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapUserAuthn_getProfile) AllocResults() (CapUserAuthn_getProfile_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_getProfile_Results(r), err
}

// CapUserAuthn_login holds the state for a server call to CapUserAuthn.login.
// See server.Call for documentation.
type CapUserAuthn_login struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapUserAuthn_login) Args() CapUserAuthn_login_Params {
	return CapUserAuthn_login_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapUserAuthn_login) AllocResults() (CapUserAuthn_login_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapUserAuthn_login_Results(r), err
}

// CapUserAuthn_logout holds the state for a server call to CapUserAuthn.logout.
// See server.Call for documentation.
type CapUserAuthn_logout struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapUserAuthn_logout) Args() CapUserAuthn_logout_Params {
	return CapUserAuthn_logout_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapUserAuthn_logout) AllocResults() (CapUserAuthn_logout_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_logout_Results(r), err
}

// CapUserAuthn_refresh holds the state for a server call to CapUserAuthn.refresh.
// See server.Call for documentation.
type CapUserAuthn_refresh struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapUserAuthn_refresh) Args() CapUserAuthn_refresh_Params {
	return CapUserAuthn_refresh_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapUserAuthn_refresh) AllocResults() (CapUserAuthn_refresh_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapUserAuthn_refresh_Results(r), err
}

// CapUserAuthn_setPassword holds the state for a server call to CapUserAuthn.setPassword.
// See server.Call for documentation.
type CapUserAuthn_setPassword struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapUserAuthn_setPassword) Args() CapUserAuthn_setPassword_Params {
	return CapUserAuthn_setPassword_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapUserAuthn_setPassword) AllocResults() (CapUserAuthn_setPassword_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_setPassword_Results(r), err
}

// CapUserAuthn_setProfile holds the state for a server call to CapUserAuthn.setProfile.
// See server.Call for documentation.
type CapUserAuthn_setProfile struct {
	*server.Call
}

// Args returns the call's arguments.
func (c CapUserAuthn_setProfile) Args() CapUserAuthn_setProfile_Params {
	return CapUserAuthn_setProfile_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c CapUserAuthn_setProfile) AllocResults() (CapUserAuthn_setProfile_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_setProfile_Results(r), err
}

// CapUserAuthn_List is a list of CapUserAuthn.
type CapUserAuthn_List = capnp.CapList[CapUserAuthn]

// NewCapUserAuthn creates a new list of CapUserAuthn.
func NewCapUserAuthn_List(s *capnp.Segment, sz int32) (CapUserAuthn_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[CapUserAuthn](l), err
}

type CapUserAuthn_getProfile_Params capnp.Struct

// CapUserAuthn_getProfile_Params_TypeID is the unique identifier for the type CapUserAuthn_getProfile_Params.
const CapUserAuthn_getProfile_Params_TypeID = 0x98f7a88d8ec4c1c0

func NewCapUserAuthn_getProfile_Params(s *capnp.Segment) (CapUserAuthn_getProfile_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_getProfile_Params(st), err
}

func NewRootCapUserAuthn_getProfile_Params(s *capnp.Segment) (CapUserAuthn_getProfile_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_getProfile_Params(st), err
}

func ReadRootCapUserAuthn_getProfile_Params(msg *capnp.Message) (CapUserAuthn_getProfile_Params, error) {
	root, err := msg.Root()
	return CapUserAuthn_getProfile_Params(root.Struct()), err
}

func (s CapUserAuthn_getProfile_Params) String() string {
	str, _ := text.Marshal(0x98f7a88d8ec4c1c0, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_getProfile_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_getProfile_Params) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_getProfile_Params {
	return CapUserAuthn_getProfile_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_getProfile_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_getProfile_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_getProfile_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_getProfile_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// CapUserAuthn_getProfile_Params_List is a list of CapUserAuthn_getProfile_Params.
type CapUserAuthn_getProfile_Params_List = capnp.StructList[CapUserAuthn_getProfile_Params]

// NewCapUserAuthn_getProfile_Params creates a new list of CapUserAuthn_getProfile_Params.
func NewCapUserAuthn_getProfile_Params_List(s *capnp.Segment, sz int32) (CapUserAuthn_getProfile_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[CapUserAuthn_getProfile_Params](l), err
}

// CapUserAuthn_getProfile_Params_Future is a wrapper for a CapUserAuthn_getProfile_Params promised by a client call.
type CapUserAuthn_getProfile_Params_Future struct{ *capnp.Future }

func (f CapUserAuthn_getProfile_Params_Future) Struct() (CapUserAuthn_getProfile_Params, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_getProfile_Params(p.Struct()), err
}

type CapUserAuthn_getProfile_Results capnp.Struct

// CapUserAuthn_getProfile_Results_TypeID is the unique identifier for the type CapUserAuthn_getProfile_Results.
const CapUserAuthn_getProfile_Results_TypeID = 0xd3ab3daf5d31eb03

func NewCapUserAuthn_getProfile_Results(s *capnp.Segment) (CapUserAuthn_getProfile_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_getProfile_Results(st), err
}

func NewRootCapUserAuthn_getProfile_Results(s *capnp.Segment) (CapUserAuthn_getProfile_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_getProfile_Results(st), err
}

func ReadRootCapUserAuthn_getProfile_Results(msg *capnp.Message) (CapUserAuthn_getProfile_Results, error) {
	root, err := msg.Root()
	return CapUserAuthn_getProfile_Results(root.Struct()), err
}

func (s CapUserAuthn_getProfile_Results) String() string {
	str, _ := text.Marshal(0xd3ab3daf5d31eb03, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_getProfile_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_getProfile_Results) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_getProfile_Results {
	return CapUserAuthn_getProfile_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_getProfile_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_getProfile_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_getProfile_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_getProfile_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapUserAuthn_getProfile_Results) Profile() (UserProfile, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return UserProfile(p.Struct()), err
}

func (s CapUserAuthn_getProfile_Results) HasProfile() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapUserAuthn_getProfile_Results) SetProfile(v UserProfile) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewProfile sets the profile field to a newly
// allocated UserProfile struct, preferring placement in s's segment.
func (s CapUserAuthn_getProfile_Results) NewProfile() (UserProfile, error) {
	ss, err := NewUserProfile(capnp.Struct(s).Segment())
	if err != nil {
		return UserProfile{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// CapUserAuthn_getProfile_Results_List is a list of CapUserAuthn_getProfile_Results.
type CapUserAuthn_getProfile_Results_List = capnp.StructList[CapUserAuthn_getProfile_Results]

// NewCapUserAuthn_getProfile_Results creates a new list of CapUserAuthn_getProfile_Results.
func NewCapUserAuthn_getProfile_Results_List(s *capnp.Segment, sz int32) (CapUserAuthn_getProfile_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapUserAuthn_getProfile_Results](l), err
}

// CapUserAuthn_getProfile_Results_Future is a wrapper for a CapUserAuthn_getProfile_Results promised by a client call.
type CapUserAuthn_getProfile_Results_Future struct{ *capnp.Future }

func (f CapUserAuthn_getProfile_Results_Future) Struct() (CapUserAuthn_getProfile_Results, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_getProfile_Results(p.Struct()), err
}
func (p CapUserAuthn_getProfile_Results_Future) Profile() UserProfile_Future {
	return UserProfile_Future{Future: p.Future.Field(0, nil)}
}

type CapUserAuthn_login_Params capnp.Struct

// CapUserAuthn_login_Params_TypeID is the unique identifier for the type CapUserAuthn_login_Params.
const CapUserAuthn_login_Params_TypeID = 0x91c8c0a05a1ee6f4

func NewCapUserAuthn_login_Params(s *capnp.Segment) (CapUserAuthn_login_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_login_Params(st), err
}

func NewRootCapUserAuthn_login_Params(s *capnp.Segment) (CapUserAuthn_login_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_login_Params(st), err
}

func ReadRootCapUserAuthn_login_Params(msg *capnp.Message) (CapUserAuthn_login_Params, error) {
	root, err := msg.Root()
	return CapUserAuthn_login_Params(root.Struct()), err
}

func (s CapUserAuthn_login_Params) String() string {
	str, _ := text.Marshal(0x91c8c0a05a1ee6f4, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_login_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_login_Params) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_login_Params {
	return CapUserAuthn_login_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_login_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_login_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_login_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_login_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapUserAuthn_login_Params) Password() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapUserAuthn_login_Params) HasPassword() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapUserAuthn_login_Params) PasswordBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapUserAuthn_login_Params) SetPassword(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapUserAuthn_login_Params_List is a list of CapUserAuthn_login_Params.
type CapUserAuthn_login_Params_List = capnp.StructList[CapUserAuthn_login_Params]

// NewCapUserAuthn_login_Params creates a new list of CapUserAuthn_login_Params.
func NewCapUserAuthn_login_Params_List(s *capnp.Segment, sz int32) (CapUserAuthn_login_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapUserAuthn_login_Params](l), err
}

// CapUserAuthn_login_Params_Future is a wrapper for a CapUserAuthn_login_Params promised by a client call.
type CapUserAuthn_login_Params_Future struct{ *capnp.Future }

func (f CapUserAuthn_login_Params_Future) Struct() (CapUserAuthn_login_Params, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_login_Params(p.Struct()), err
}

type CapUserAuthn_login_Results capnp.Struct

// CapUserAuthn_login_Results_TypeID is the unique identifier for the type CapUserAuthn_login_Results.
const CapUserAuthn_login_Results_TypeID = 0xda2c28aea8073720

func NewCapUserAuthn_login_Results(s *capnp.Segment) (CapUserAuthn_login_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapUserAuthn_login_Results(st), err
}

func NewRootCapUserAuthn_login_Results(s *capnp.Segment) (CapUserAuthn_login_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapUserAuthn_login_Results(st), err
}

func ReadRootCapUserAuthn_login_Results(msg *capnp.Message) (CapUserAuthn_login_Results, error) {
	root, err := msg.Root()
	return CapUserAuthn_login_Results(root.Struct()), err
}

func (s CapUserAuthn_login_Results) String() string {
	str, _ := text.Marshal(0xda2c28aea8073720, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_login_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_login_Results) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_login_Results {
	return CapUserAuthn_login_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_login_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_login_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_login_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_login_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapUserAuthn_login_Results) AuthToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapUserAuthn_login_Results) HasAuthToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapUserAuthn_login_Results) AuthTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapUserAuthn_login_Results) SetAuthToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s CapUserAuthn_login_Results) RefreshToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s CapUserAuthn_login_Results) HasRefreshToken() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s CapUserAuthn_login_Results) RefreshTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s CapUserAuthn_login_Results) SetRefreshToken(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// CapUserAuthn_login_Results_List is a list of CapUserAuthn_login_Results.
type CapUserAuthn_login_Results_List = capnp.StructList[CapUserAuthn_login_Results]

// NewCapUserAuthn_login_Results creates a new list of CapUserAuthn_login_Results.
func NewCapUserAuthn_login_Results_List(s *capnp.Segment, sz int32) (CapUserAuthn_login_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[CapUserAuthn_login_Results](l), err
}

// CapUserAuthn_login_Results_Future is a wrapper for a CapUserAuthn_login_Results promised by a client call.
type CapUserAuthn_login_Results_Future struct{ *capnp.Future }

func (f CapUserAuthn_login_Results_Future) Struct() (CapUserAuthn_login_Results, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_login_Results(p.Struct()), err
}

type CapUserAuthn_logout_Params capnp.Struct

// CapUserAuthn_logout_Params_TypeID is the unique identifier for the type CapUserAuthn_logout_Params.
const CapUserAuthn_logout_Params_TypeID = 0x81ccd5a4ad2aa0d9

func NewCapUserAuthn_logout_Params(s *capnp.Segment) (CapUserAuthn_logout_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_logout_Params(st), err
}

func NewRootCapUserAuthn_logout_Params(s *capnp.Segment) (CapUserAuthn_logout_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_logout_Params(st), err
}

func ReadRootCapUserAuthn_logout_Params(msg *capnp.Message) (CapUserAuthn_logout_Params, error) {
	root, err := msg.Root()
	return CapUserAuthn_logout_Params(root.Struct()), err
}

func (s CapUserAuthn_logout_Params) String() string {
	str, _ := text.Marshal(0x81ccd5a4ad2aa0d9, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_logout_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_logout_Params) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_logout_Params {
	return CapUserAuthn_logout_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_logout_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_logout_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_logout_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_logout_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapUserAuthn_logout_Params) RefreshToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapUserAuthn_logout_Params) HasRefreshToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapUserAuthn_logout_Params) RefreshTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapUserAuthn_logout_Params) SetRefreshToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapUserAuthn_logout_Params_List is a list of CapUserAuthn_logout_Params.
type CapUserAuthn_logout_Params_List = capnp.StructList[CapUserAuthn_logout_Params]

// NewCapUserAuthn_logout_Params creates a new list of CapUserAuthn_logout_Params.
func NewCapUserAuthn_logout_Params_List(s *capnp.Segment, sz int32) (CapUserAuthn_logout_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapUserAuthn_logout_Params](l), err
}

// CapUserAuthn_logout_Params_Future is a wrapper for a CapUserAuthn_logout_Params promised by a client call.
type CapUserAuthn_logout_Params_Future struct{ *capnp.Future }

func (f CapUserAuthn_logout_Params_Future) Struct() (CapUserAuthn_logout_Params, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_logout_Params(p.Struct()), err
}

type CapUserAuthn_logout_Results capnp.Struct

// CapUserAuthn_logout_Results_TypeID is the unique identifier for the type CapUserAuthn_logout_Results.
const CapUserAuthn_logout_Results_TypeID = 0xbb1be9df471e9b74

func NewCapUserAuthn_logout_Results(s *capnp.Segment) (CapUserAuthn_logout_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_logout_Results(st), err
}

func NewRootCapUserAuthn_logout_Results(s *capnp.Segment) (CapUserAuthn_logout_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_logout_Results(st), err
}

func ReadRootCapUserAuthn_logout_Results(msg *capnp.Message) (CapUserAuthn_logout_Results, error) {
	root, err := msg.Root()
	return CapUserAuthn_logout_Results(root.Struct()), err
}

func (s CapUserAuthn_logout_Results) String() string {
	str, _ := text.Marshal(0xbb1be9df471e9b74, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_logout_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_logout_Results) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_logout_Results {
	return CapUserAuthn_logout_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_logout_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_logout_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_logout_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_logout_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// CapUserAuthn_logout_Results_List is a list of CapUserAuthn_logout_Results.
type CapUserAuthn_logout_Results_List = capnp.StructList[CapUserAuthn_logout_Results]

// NewCapUserAuthn_logout_Results creates a new list of CapUserAuthn_logout_Results.
func NewCapUserAuthn_logout_Results_List(s *capnp.Segment, sz int32) (CapUserAuthn_logout_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[CapUserAuthn_logout_Results](l), err
}

// CapUserAuthn_logout_Results_Future is a wrapper for a CapUserAuthn_logout_Results promised by a client call.
type CapUserAuthn_logout_Results_Future struct{ *capnp.Future }

func (f CapUserAuthn_logout_Results_Future) Struct() (CapUserAuthn_logout_Results, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_logout_Results(p.Struct()), err
}

type CapUserAuthn_refresh_Params capnp.Struct

// CapUserAuthn_refresh_Params_TypeID is the unique identifier for the type CapUserAuthn_refresh_Params.
const CapUserAuthn_refresh_Params_TypeID = 0x8a007ccfc6846d2c

func NewCapUserAuthn_refresh_Params(s *capnp.Segment) (CapUserAuthn_refresh_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_refresh_Params(st), err
}

func NewRootCapUserAuthn_refresh_Params(s *capnp.Segment) (CapUserAuthn_refresh_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_refresh_Params(st), err
}

func ReadRootCapUserAuthn_refresh_Params(msg *capnp.Message) (CapUserAuthn_refresh_Params, error) {
	root, err := msg.Root()
	return CapUserAuthn_refresh_Params(root.Struct()), err
}

func (s CapUserAuthn_refresh_Params) String() string {
	str, _ := text.Marshal(0x8a007ccfc6846d2c, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_refresh_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_refresh_Params) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_refresh_Params {
	return CapUserAuthn_refresh_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_refresh_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_refresh_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_refresh_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_refresh_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapUserAuthn_refresh_Params) RefreshToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapUserAuthn_refresh_Params) HasRefreshToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapUserAuthn_refresh_Params) RefreshTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapUserAuthn_refresh_Params) SetRefreshToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapUserAuthn_refresh_Params_List is a list of CapUserAuthn_refresh_Params.
type CapUserAuthn_refresh_Params_List = capnp.StructList[CapUserAuthn_refresh_Params]

// NewCapUserAuthn_refresh_Params creates a new list of CapUserAuthn_refresh_Params.
func NewCapUserAuthn_refresh_Params_List(s *capnp.Segment, sz int32) (CapUserAuthn_refresh_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapUserAuthn_refresh_Params](l), err
}

// CapUserAuthn_refresh_Params_Future is a wrapper for a CapUserAuthn_refresh_Params promised by a client call.
type CapUserAuthn_refresh_Params_Future struct{ *capnp.Future }

func (f CapUserAuthn_refresh_Params_Future) Struct() (CapUserAuthn_refresh_Params, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_refresh_Params(p.Struct()), err
}

type CapUserAuthn_refresh_Results capnp.Struct

// CapUserAuthn_refresh_Results_TypeID is the unique identifier for the type CapUserAuthn_refresh_Results.
const CapUserAuthn_refresh_Results_TypeID = 0xb8f2fc96dded89b3

func NewCapUserAuthn_refresh_Results(s *capnp.Segment) (CapUserAuthn_refresh_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapUserAuthn_refresh_Results(st), err
}

func NewRootCapUserAuthn_refresh_Results(s *capnp.Segment) (CapUserAuthn_refresh_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return CapUserAuthn_refresh_Results(st), err
}

func ReadRootCapUserAuthn_refresh_Results(msg *capnp.Message) (CapUserAuthn_refresh_Results, error) {
	root, err := msg.Root()
	return CapUserAuthn_refresh_Results(root.Struct()), err
}

func (s CapUserAuthn_refresh_Results) String() string {
	str, _ := text.Marshal(0xb8f2fc96dded89b3, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_refresh_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_refresh_Results) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_refresh_Results {
	return CapUserAuthn_refresh_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_refresh_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_refresh_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_refresh_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_refresh_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapUserAuthn_refresh_Results) NewAuthToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapUserAuthn_refresh_Results) HasNewAuthToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapUserAuthn_refresh_Results) NewAuthTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapUserAuthn_refresh_Results) SetNewAuthToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s CapUserAuthn_refresh_Results) NewRefreshToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s CapUserAuthn_refresh_Results) HasNewRefreshToken() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s CapUserAuthn_refresh_Results) NewRefreshTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s CapUserAuthn_refresh_Results) SetNewRefreshToken(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// CapUserAuthn_refresh_Results_List is a list of CapUserAuthn_refresh_Results.
type CapUserAuthn_refresh_Results_List = capnp.StructList[CapUserAuthn_refresh_Results]

// NewCapUserAuthn_refresh_Results creates a new list of CapUserAuthn_refresh_Results.
func NewCapUserAuthn_refresh_Results_List(s *capnp.Segment, sz int32) (CapUserAuthn_refresh_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[CapUserAuthn_refresh_Results](l), err
}

// CapUserAuthn_refresh_Results_Future is a wrapper for a CapUserAuthn_refresh_Results promised by a client call.
type CapUserAuthn_refresh_Results_Future struct{ *capnp.Future }

func (f CapUserAuthn_refresh_Results_Future) Struct() (CapUserAuthn_refresh_Results, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_refresh_Results(p.Struct()), err
}

type CapUserAuthn_setPassword_Params capnp.Struct

// CapUserAuthn_setPassword_Params_TypeID is the unique identifier for the type CapUserAuthn_setPassword_Params.
const CapUserAuthn_setPassword_Params_TypeID = 0xc24d2df029f38b08

func NewCapUserAuthn_setPassword_Params(s *capnp.Segment) (CapUserAuthn_setPassword_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_setPassword_Params(st), err
}

func NewRootCapUserAuthn_setPassword_Params(s *capnp.Segment) (CapUserAuthn_setPassword_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_setPassword_Params(st), err
}

func ReadRootCapUserAuthn_setPassword_Params(msg *capnp.Message) (CapUserAuthn_setPassword_Params, error) {
	root, err := msg.Root()
	return CapUserAuthn_setPassword_Params(root.Struct()), err
}

func (s CapUserAuthn_setPassword_Params) String() string {
	str, _ := text.Marshal(0xc24d2df029f38b08, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_setPassword_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_setPassword_Params) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_setPassword_Params {
	return CapUserAuthn_setPassword_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_setPassword_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_setPassword_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_setPassword_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_setPassword_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapUserAuthn_setPassword_Params) NewPassword() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CapUserAuthn_setPassword_Params) HasNewPassword() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapUserAuthn_setPassword_Params) NewPasswordBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CapUserAuthn_setPassword_Params) SetNewPassword(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// CapUserAuthn_setPassword_Params_List is a list of CapUserAuthn_setPassword_Params.
type CapUserAuthn_setPassword_Params_List = capnp.StructList[CapUserAuthn_setPassword_Params]

// NewCapUserAuthn_setPassword_Params creates a new list of CapUserAuthn_setPassword_Params.
func NewCapUserAuthn_setPassword_Params_List(s *capnp.Segment, sz int32) (CapUserAuthn_setPassword_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapUserAuthn_setPassword_Params](l), err
}

// CapUserAuthn_setPassword_Params_Future is a wrapper for a CapUserAuthn_setPassword_Params promised by a client call.
type CapUserAuthn_setPassword_Params_Future struct{ *capnp.Future }

func (f CapUserAuthn_setPassword_Params_Future) Struct() (CapUserAuthn_setPassword_Params, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_setPassword_Params(p.Struct()), err
}

type CapUserAuthn_setPassword_Results capnp.Struct

// CapUserAuthn_setPassword_Results_TypeID is the unique identifier for the type CapUserAuthn_setPassword_Results.
const CapUserAuthn_setPassword_Results_TypeID = 0xba0eadefa6a1bdd7

func NewCapUserAuthn_setPassword_Results(s *capnp.Segment) (CapUserAuthn_setPassword_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_setPassword_Results(st), err
}

func NewRootCapUserAuthn_setPassword_Results(s *capnp.Segment) (CapUserAuthn_setPassword_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_setPassword_Results(st), err
}

func ReadRootCapUserAuthn_setPassword_Results(msg *capnp.Message) (CapUserAuthn_setPassword_Results, error) {
	root, err := msg.Root()
	return CapUserAuthn_setPassword_Results(root.Struct()), err
}

func (s CapUserAuthn_setPassword_Results) String() string {
	str, _ := text.Marshal(0xba0eadefa6a1bdd7, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_setPassword_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_setPassword_Results) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_setPassword_Results {
	return CapUserAuthn_setPassword_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_setPassword_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_setPassword_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_setPassword_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_setPassword_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// CapUserAuthn_setPassword_Results_List is a list of CapUserAuthn_setPassword_Results.
type CapUserAuthn_setPassword_Results_List = capnp.StructList[CapUserAuthn_setPassword_Results]

// NewCapUserAuthn_setPassword_Results creates a new list of CapUserAuthn_setPassword_Results.
func NewCapUserAuthn_setPassword_Results_List(s *capnp.Segment, sz int32) (CapUserAuthn_setPassword_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[CapUserAuthn_setPassword_Results](l), err
}

// CapUserAuthn_setPassword_Results_Future is a wrapper for a CapUserAuthn_setPassword_Results promised by a client call.
type CapUserAuthn_setPassword_Results_Future struct{ *capnp.Future }

func (f CapUserAuthn_setPassword_Results_Future) Struct() (CapUserAuthn_setPassword_Results, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_setPassword_Results(p.Struct()), err
}

type CapUserAuthn_setProfile_Params capnp.Struct

// CapUserAuthn_setProfile_Params_TypeID is the unique identifier for the type CapUserAuthn_setProfile_Params.
const CapUserAuthn_setProfile_Params_TypeID = 0x9604e07c9629f204

func NewCapUserAuthn_setProfile_Params(s *capnp.Segment) (CapUserAuthn_setProfile_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_setProfile_Params(st), err
}

func NewRootCapUserAuthn_setProfile_Params(s *capnp.Segment) (CapUserAuthn_setProfile_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapUserAuthn_setProfile_Params(st), err
}

func ReadRootCapUserAuthn_setProfile_Params(msg *capnp.Message) (CapUserAuthn_setProfile_Params, error) {
	root, err := msg.Root()
	return CapUserAuthn_setProfile_Params(root.Struct()), err
}

func (s CapUserAuthn_setProfile_Params) String() string {
	str, _ := text.Marshal(0x9604e07c9629f204, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_setProfile_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_setProfile_Params) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_setProfile_Params {
	return CapUserAuthn_setProfile_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_setProfile_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_setProfile_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_setProfile_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_setProfile_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CapUserAuthn_setProfile_Params) NewProfile() (UserProfile, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return UserProfile(p.Struct()), err
}

func (s CapUserAuthn_setProfile_Params) HasNewProfile() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CapUserAuthn_setProfile_Params) SetNewProfile(v UserProfile) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewNewProfile sets the newProfile field to a newly
// allocated UserProfile struct, preferring placement in s's segment.
func (s CapUserAuthn_setProfile_Params) NewNewProfile() (UserProfile, error) {
	ss, err := NewUserProfile(capnp.Struct(s).Segment())
	if err != nil {
		return UserProfile{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// CapUserAuthn_setProfile_Params_List is a list of CapUserAuthn_setProfile_Params.
type CapUserAuthn_setProfile_Params_List = capnp.StructList[CapUserAuthn_setProfile_Params]

// NewCapUserAuthn_setProfile_Params creates a new list of CapUserAuthn_setProfile_Params.
func NewCapUserAuthn_setProfile_Params_List(s *capnp.Segment, sz int32) (CapUserAuthn_setProfile_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[CapUserAuthn_setProfile_Params](l), err
}

// CapUserAuthn_setProfile_Params_Future is a wrapper for a CapUserAuthn_setProfile_Params promised by a client call.
type CapUserAuthn_setProfile_Params_Future struct{ *capnp.Future }

func (f CapUserAuthn_setProfile_Params_Future) Struct() (CapUserAuthn_setProfile_Params, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_setProfile_Params(p.Struct()), err
}
func (p CapUserAuthn_setProfile_Params_Future) NewProfile() UserProfile_Future {
	return UserProfile_Future{Future: p.Future.Field(0, nil)}
}

type CapUserAuthn_setProfile_Results capnp.Struct

// CapUserAuthn_setProfile_Results_TypeID is the unique identifier for the type CapUserAuthn_setProfile_Results.
const CapUserAuthn_setProfile_Results_TypeID = 0xba2709b2850e5ca8

func NewCapUserAuthn_setProfile_Results(s *capnp.Segment) (CapUserAuthn_setProfile_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_setProfile_Results(st), err
}

func NewRootCapUserAuthn_setProfile_Results(s *capnp.Segment) (CapUserAuthn_setProfile_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return CapUserAuthn_setProfile_Results(st), err
}

func ReadRootCapUserAuthn_setProfile_Results(msg *capnp.Message) (CapUserAuthn_setProfile_Results, error) {
	root, err := msg.Root()
	return CapUserAuthn_setProfile_Results(root.Struct()), err
}

func (s CapUserAuthn_setProfile_Results) String() string {
	str, _ := text.Marshal(0xba2709b2850e5ca8, capnp.Struct(s))
	return str
}

func (s CapUserAuthn_setProfile_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CapUserAuthn_setProfile_Results) DecodeFromPtr(p capnp.Ptr) CapUserAuthn_setProfile_Results {
	return CapUserAuthn_setProfile_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CapUserAuthn_setProfile_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CapUserAuthn_setProfile_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CapUserAuthn_setProfile_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CapUserAuthn_setProfile_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// CapUserAuthn_setProfile_Results_List is a list of CapUserAuthn_setProfile_Results.
type CapUserAuthn_setProfile_Results_List = capnp.StructList[CapUserAuthn_setProfile_Results]

// NewCapUserAuthn_setProfile_Results creates a new list of CapUserAuthn_setProfile_Results.
func NewCapUserAuthn_setProfile_Results_List(s *capnp.Segment, sz int32) (CapUserAuthn_setProfile_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[CapUserAuthn_setProfile_Results](l), err
}

// CapUserAuthn_setProfile_Results_Future is a wrapper for a CapUserAuthn_setProfile_Results promised by a client call.
type CapUserAuthn_setProfile_Results_Future struct{ *capnp.Future }

func (f CapUserAuthn_setProfile_Results_Future) Struct() (CapUserAuthn_setProfile_Results, error) {
	p, err := f.Future.Ptr()
	return CapUserAuthn_setProfile_Results(p.Struct()), err
}

const schema_c2f3c14cadbaf856 = "x\xda\xacW}l\x14[\x15?gfwg\xb7\xbb" +
	"\xaf\xed0\x8f\xc8\x8b\xfa\xb66\x8d\xa5/\xe0\xa3\xd4(" +
	"E\xa1\xdbB\xa3m(\xee\xb4\x16\xa5\x91\xe0t;m" +
	"\xb7\xecWw\xb6\xad-\xc5\x0a\x01\x91\x1aQ\x084F" +
	"R\x05\x82\xa5@\x8a\xa9B\x84\xa2\x02\x8d\xa8M\x00\xff" +
	"P\x82\x18\xf9\x88\x01\x05\x91\x80@\xa2\x12`\xcd\xbd\xbb" +
	"3{\xf7\xa3\xed\xd6\xc7\x7f\xed\xdc\xdf=\x9f\xbf\xdf9" +
	"w\x97\xec5\xb9L\xa5o\x9dw\x00'\xef3[\xa2" +
	"\xb7V\x16\xe7\xf6M}\xf5\x1b \x16\"\x80\x19\x05\x80" +
	"\xb2j\xcba\x04\x94\x1a-\x15\x80\xd1\x1b\x07\xdf\x1b;" +
	"r\xed\xf2V\x10\x0b\x0c\xc0.K\x98\x00\xf6S\xc0/" +
	"&\xf7\\\xfdm\xf0\xd0\xb7@\x94\xf8\xe8\xba\xffL\x8c" +
	"\xad\xb9\xf8l\x12\x00\xcb\xceZ\xe6\xa14e!\x17." +
	"Y\x04\x94:\x05\x01\xe0\xfc\"\xff\xf6\xdf\xfc\xbe\x7f\x90" +
	"\xb1\xb6^\xe8#\xd6T\x81X{\xfe\xb7w\x9b\x0e^" +
	"\xf8\xdd\x9e$wB\x07uG\x01\xa6\xa7%C\xfdw" +
	"LC,\xe0\xac\xb0\x97\x00\xa6(\xe0\xc2\xc5_\xef\xfe" +
	"\xce\xe8\xbf\xbf\x1f\x03\x98\xc8\xf9#rn\x8a\xce\xdb4" +
	".;=\xbd?\x04Q2%EzS(D\xe9\x11" +
	"\x09\xaf\xe1\xbe\xc0c\xc3s\x81C\x80h\xee\x91\xb6\xe2" +
	"\xe3\xf7\x87~\x9c\x86'\xf6$\xb3U\x00\xa8\xb7\xf2\xd8" +
	"\xe0\xb0R\xf8\x87\x86G\xf6\x17||\xc1h\xac\x94\xd4" +
	"\xf1+\xe18q\xbc\xd19~\xa2\xffS\xb7\x8fg0" +
	"4\x98\xc1\xd0\xe3eU\xeb\x82\x1f\xbb0\x96ZQ\xe9" +
	"\x95\xf0W\xc9F\xd0\x92\xd9\xbaS\xda@\xfe\x8a\xbe_" +
	"\xdb\xbd\xffdk\xe1\xa9\xb4\xf2W[9\x94d\x82)" +
	"\xab\xb3\xeeD\xa9\xc6F\xe0kN\x8f\\\xb9\xbaq\xeb" +
	"\xcf\xd9~\x97\xdah\xf9*m\xa4|?\xdb\xf5\xe8\xe6" +
	"\xd0\xcb\xa7g\xe2\xf5\xe5\x08@\xb5m#\x80N[\x0f" +
	"`\xf4\xfa/\x0f\x8d<\x1e\xcb\x9d`\xea{\xcdv\x98" +
	"\xa49\xfa\x95\xdc\x1d?\xb5\x15\xb3'\x97l? '" +
	"\x91\x03\xef~\xee\xf6\x83\x0f\x9fcNN\xdb\xfa\xc8\x89" +
	"\xf5\xdb\xcfJ\x9e,\xae\x9bd\xdby\x88\\Bi\x9c" +
	"\xc63x\xd4z\xbd\xffN\xc9\x14\x88\x1f1\x00\xd7l" +
	"\x83\x04p\x8f\x02V\xfeq~\xf5\xdd\xb2eI\x00s" +
	"\x0e\xcdh~\x0e\x01\xd4\xd6\x15-\xfe|\xf9\xd5+ " +
	"J\x98\xa8\x10\xcdL*\xcfy!U\xe7\x90\xbf*s" +
	"Hr\xfc\xc3\xd2\x0d?Yq\xe2\x0fl8\xc394" +
	"\x9c1j\xac\xe0\xd3\xc2\xe8\xc9\x85\x8b\xfe\xcc\x96\xe7J" +
	"\x0e\x95\xc3\x0dj\xa1qs\xd9?_\xfc}\xfd]\xb6" +
	"\xc0+\xecTPuvb\xe1{\x07N\xfd\xe8\xcc\xaf" +
	"\xea\xee\xa5\x91\xc1o/Di\x8b\x9d\xb0\xf0kv\x1e" +
	"\x1b\xb6\xdb)\x1b\"\xa1H\xdbw\x0bv\xff\x835\xd8" +
	"k\x9f \x06wQ\x83\xb7\xf2q\xe2u\xf7\xb9\xc7l" +
	"\x01\x8e\xd9i\xc7NS\x006=<\xba\xaam\xdf\x13" +
	"\x16p\xc3N\x93z@\x01\x9f\x19\xf9\xe6\xf8\xe5\xd5\xcd" +
	"\xffb]\xd8\x1c\xb4\xc6\xef8\x08\xe0\x9d\xe1/|\x89" +
	"+\x1e}\xc1\x02\xca\x1d\x93\x04PC\x01\x7f\xfa\xef\xd3" +
	"\xcd_\xbe\xf4\x97\x97\x0c\xf7\xfd\x0e\xda\xfa\xbb_/\xe9" +
	"\xec\xdf\xd2\xfe:-\xdd\x0d\x8e\xa5(\xf9\x1d$\xddv" +
	"\x07\x8f\x0d\x11\x07\x87\xb0(\xda\xde\xd5\xac\x84\xbc\xefW" +
	"\x9a\xbb\"\xed\x81Ox\x94P \xb4|\x95\x12\xaaS" +
	"\x02J\x9bZI?\xfa\xbcZ\xa4QS\xc3ZQ\xbd" +
	"\xaau\x09\xbe\x88&\x9bx\x13\x80\x09\x01\xc4\xb7j\x01" +
	"d\x07\x8f\xf2B\x0e\xa3\xa1p\xb0\xd5\xebS5\x00\xc0" +
	"\\@7\x8f\x98\x9f\xe0\x03 \xf9hx4%{$" +
	"\x1e\xe2\xfe\x82m\xc1\xaeH\x91\xdb\xa9\x84\x15\x7f\x92\xaf" +
	"\x8e\xb8\xaf\x05\x1cF\xc3jkX\xd5\xda\xbf\x08y\xc1" +
	"Mj\x00\x1d\xc0\xa1\x83\xb1\xceO\x97\x0f\x06\xdc\x88r" +
	">o\x060\x1a\x81\xbaL\xc5\xce*\xe0DU\xc0D" +
	"\x89Q\x1f\xd9\xe2\xfaz\xe0DY@\xce \x1d\xea3" +
	"H\xacn\x02N\\! o\xf0\x07\xf5&\x8a\xa5a" +
	"\xe0\xc4\x12a@ii!I\xba0\xaaW\x14Ps" +
	"\x91L\xfc\xc1n\xb5Q\x03\x9e\x1e\x86UM\x8d\xb8\x15" +
	"\x0d\x9cZO0\xdc\xe2B7fQ\xb4x9\x8a*" +
	"\xdc\x1f\xa4j3\xf5\xc4\x1b(r+y\xa9\xc6k\x19" +
	"\xe3!E\xa3!\x93\xf6\xa7Z6Og\x99$\x1b\xa3" +
	"M\x11\x0d\x1d\x93\xcc71\xe6\x03j\x0fE\x02\xefS" +
	"Sx\x95\x9f\x8d\xa7\xb64O\x19\xd9\xe2QBk\x15" +
	"\xbf\x1a\xbb'D\xda\x09_\xe2\xe9\x80\x88\x1dQO\xdc" +
	"&\xe4\x91K\x19\xdd\xb6\xa8\xadJ\x97/R\x1f/6" +
	")\xf5:\xc5\xe7m\xf1Fz\x1bT\xf4\x10\x83&\xe0" +
	"\x14S\xd7\xbc\xe9\xe3f\x15\xa83D\x0d\x13\x09\xe6u" +
	"\xf9\"\xdaL~+=\x1eU\xd3R\xdcz\x00\xe2~" +
	"KM\xf9\xac\x0e\xb9d\xbfF\xce\xb2\x95jD\x1fw" +
	"\xa8o\x06\xb1\xb4\x83\xf2\x19\x13\xbb\x00\xf5\x91'~\xb4" +
	"\x0f8q\xbe\x90R$\x17\x92\x0f4#\xa8\x88\xe5\x94" +
	"Lk~\x9a\x9e\x91\x90\xe5\x054\x0e\xfd\x9d\x81\xfa\xce" +
	"\x10\xc7\x89\xe6\x8e\x918\xf4W\x0c\xea\xebB\x1c^\x0a" +
	"\x9c\xb8\x87hU\x7fP\xa1\xbe\x14\xc5\x1d\xcb\x81\x13{" +
	"\x05\xe4\xf5\xc7\x11\xb3\x84\xfdD\xff\x8a\x80\x89M\x89\xfa" +
	"\x02\x16\x1b\x9b\x81\x13\xeb\x044\x1b\x8f\"\xd4W\xb0X" +
	"Ib)\x17\xa2:\xc7\x08G]\xe8\xa4\xb2qaE" +
	"l\xa4\xb9p \xae?\x17Fc\"\xd7z@\xa0\"" +
	"\x8fjI7\xd9\xe2\xcc@\x8c\xf8H\xa1\x83\xd9\x17\xc1" +
	"7\xabL}\xa4\xc4\x8ck [\x0d\xe3%d\xa6," +
	"\xe4Q\xfe$\x87\"\xe2\xdbH>\x96n\x03\x90\x97\xf0" +
	"(\x7f6&Vb%u\xd0\x04\xd4\x1e\xaa\x0a\x8c\xcb" +
	"b\x8e\x83\"\x9e\x86\xb1\x88\xe64^h\x1e<si" +
	"\xb6\x0dT_\x11\xcb|n\xb1\x91\xd9\xc2'\x0f\xc9\xe6" +
	"\x94)f\xf4}\xb6\xec+\xf5\x7f\x0dWF7\x80u" +
	"P\x08\xa4;(\xbf\xcd\xa1\xe0QB(&\xde\xa9\x80" +
	"(f\xe1\x80aU\xa69\xcc\x92\xc9\xe3\xf3\xaa\x81H" +
	"\xcd\xeaLdb\x87\x09\x89\xd9]\x11+~l\x9e\x18" +
	"\xf4\xa9\x02\x90\x8bx\x94\x970\xf4Y\xfc^\x82S\x03" +
	"T85\xabu\xfby\x01\xc5\xaffO\x95\xb6\xf4\xa6" +
	"\xb3\xc9T%\xaa5\x10\x7f\xb2\xcc\xb0Of\xd9\x89\xf5" +
	"\xaa\x936\x84M\xaf>\x93::\x18u(D\x1a\xc1" +
	"M*`B\x1a\xb3\xac\xe6\xec\xd6\x83[\x09\x0b)\x1b" +
	"\x9a\xcd6\xa5\xac\x19\xe7/\x89-\xd0\xa0\x86\xbb\xbd\x1e" +
	"u\xad\xa0\xf8\xd5\xa4\xfd\xb7\xd4\xa9L\xbb\xf6\xd2\xc2b" +
	"e\x91\xe1a\x92Md\xb3\x0b\"f\x17\xfe\x1f\xb6f" +
	"#\x86L\x04J\x97\x9b\xf1\xab|f\xb9e\x9a\xdd\xf1" +
	"\xf8a\xae\x95\xb1d[yc~\xbf\x89\x89\x94\xf9\x87" +
	"A|\xe6\xcd\xf4\x9e\x8a]t\xd2\x9bI\x8c\xeaK{" +
	"\x1b\xfc/\x00\x00\xff\xff\xc8\x9f\x10I"

func init() {
	schemas.Register(schema_c2f3c14cadbaf856,
		0x8060c97a0e273ede,
		0x81ccd5a4ad2aa0d9,
		0x88a16fc7ce91c2bc,
		0x8a007ccfc6846d2c,
		0x91c8c0a05a1ee6f4,
		0x9604e07c9629f204,
		0x98f7a88d8ec4c1c0,
		0x9e79631f51b16b12,
		0xa596e8aa2767a40e,
		0xa818262095a69d17,
		0xaadf367cabb11f5f,
		0xadc0216f564238ef,
		0xb42266ae95764a2f,
		0xb7815fcecda6b54c,
		0xb8f2fc96dded89b3,
		0xba0eadefa6a1bdd7,
		0xba2709b2850e5ca8,
		0xbb1be9df471e9b74,
		0xc24d2df029f38b08,
		0xc929e07cd708a78a,
		0xc93833e44515d43e,
		0xcdce39482d244d4a,
		0xd3ab3daf5d31eb03,
		0xda2c28aea8073720,
		0xe459e7faec337b55,
		0xe54dbeb89fb49b90,
		0xea8e208f67747074,
		0xefbb76feba0110de,
		0xf0946743a7eb5a01,
		0xf16244ccb186a63b,
		0xfaa82702574f9d19,
		0xfcdcc5587bf2f9d8,
		0xfe687d7c71297ee4)
}

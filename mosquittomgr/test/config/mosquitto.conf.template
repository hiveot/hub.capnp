# Mosquitto MQTT Broker configuration file
# Template for WoST Mosquitto protocol binding
# Features: 
# - MQTT SSL and WebSockets SLL 
# - Authentication methods:
#   1. Client certificate based authentication (aimed at plugins)
#   2. Password based authentication using TLS
#   3. Password based authentication using websockets

per_listener_settings true

# these are globals
allow_anonymous false
retain_available false
persistence false
#message_size_limit 10000000
#max_inflight_messages 1000
#max_queued_bytes 100000000  
#max_queued_messages 1000

log_dest file ${logFolder}/mosquitto.log
log_dest stdout

log_timestamp_format [%Y-%m-%dT%H:%M:%S] Mosquitto
log_type error
log_type warning
log_type notice
log_type information

#--- MQTT protocol over TLS with certificate auth
# This is the preferred connection method and used by devices, plugins, administrator and consumers with a certificate.
listener ${mqttPortCert}
max_connections 100
cafile ${caCertFile}
keyfile ${serverKeyFile}
certfile ${serverCertFile}

# Certificate CN field is used as the username
require_certificate true
use_identity_as_username true     # CN 
tls_version tlsv1.2

# mosqauth plugin handles authorization
auth_plugin ${binFolder}/mosqauth.so
auth_opt_logFile ${logFolder}/mosqauth-cert.log
auth_opt_logLevel info
auth_opt_aclFile ${configFolder}/test.acl


#--- MQTT over TLS/SSL for use with username/password login
# Intended for web browser and client applications that are consumers without certificate
# Client certificates are not used but a server CA is needed on the client or the 
#  client must ignore certificate verification.
# Use a password file for user names
listener ${mqttPortUnpw}

max_connections 100
#protocol websockets
cafile ${caCertFile}
keyfile ${serverKeyFile}
certfile ${serverCertFile}
require_certificate false
tls_version tlsv1.2

# mosqauth plugin handles authentication & authorization
auth_plugin ${binFolder}/mosqauth.so
auth_opt_logFile ${logFolder}/mosqauth-unpw.log
auth_opt_logLevel info
auth_opt_aclFile ${configFolder}/test.acl
auth_opt_unpwFile ${configFolder}/test.passwd
# For JWT token verification
auth_opt_serverCertFile ${serverCertFile}


#--- WebSockets over TLS/SSL for use with username/token login
# Intended for web browser and client applications that are consumers without certificate
# Client certificates are not used but a server CA is needed on the client or the 
#  client must ignore certificate verification.
# JWT Authentication tokens are used for authentication
listener ${mqttPortWS}

max_connections 100
protocol websockets
cafile ${caCertFile}
keyfile ${serverKeyFile}
certfile ${serverCertFile}
require_certificate false
tls_version tlsv1.2

# mosqauth plugin handles authentication & authorization
auth_plugin ${binFolder}/mosqauth.so
auth_opt_logFile ${logFolder}/mosqauth-unpw.log
auth_opt_logLevel info
auth_opt_aclFile ${configFolder}/test.acl
#auth_opt_unpwFile ${configFolder}/test.passwd
# For JWT token verification
auth_opt_serverCertFile ${serverCertFile}
